{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8ac6c5dcb673401da80a","webpack:///./src/index.js","webpack:///external \"lodash/fp\"","webpack:///./src/tokenTypes.js","webpack:///./src/tokenizer.js","webpack:///./src/modules/math/functions/index.js","webpack:///./src/modules/tokenizer/index.js","webpack:///./src/tokenizerUtil.js","webpack:///./src/tokenizerLocales/en/index.js","webpack:///./src/modules/math/constants.js","webpack:///./src/modules/math/types/index.js","webpack:///./src/tokenizerLocales/en/unit.js","webpack:///./data/en/1-word-units.json","webpack:///./data/en/2-word-units.json","webpack:///./data/en/3-word-units.json","webpack:///./data/en/abbreviations.json","webpack:///./src/tokenizerLocales/en/date.js","webpack:///./src/util.js","webpack:///./src/transformer.js","webpack:///./src/modules/transformer/index.js","webpack:///./src/transformers/assignmentTransform.js","webpack:///./src/modules/patternMatcher.js","webpack:///./src/transformers/bracketTransform.js","webpack:///./src/transformers/commaTransform.js","webpack:///./src/transformers/createOperatorTransform.js","webpack:///./src/transformers/util.js","webpack:///./src/transformers/functionShorthandTransform.js","webpack:///./src/transformers/conversionTransform.js","webpack:///./src/transformers/percentTransform.js","webpack:///./src/transformers/entityTransform.js","webpack:///./src/modules/math/types/entity.js","webpack:///./data/baseDimensions.json","webpack:///./src/transformers/remainingTokensTransform.js","webpack:///external \"color-forge\"","webpack:///./src/transformers/miscGroupTransform.js","webpack:///./src/modules/math/index.js","webpack:///./src/modules/math/resolver.js","webpack:///external \"lodash\"","webpack:///./src/modules/math/functions/definitions.js","webpack:///./src/modules/math/functions/color.js","webpack:///./src/modules/math/functions/colorEntity.js","webpack:///./src/modules/math/util/functions.js","webpack:///./src/modules/math/util/color.js","webpack:///./src/modules/math/functions/colorPercentage.js","webpack:///./src/modules/math/functions/constructors.js","webpack:///./src/modules/math/functions/dateTime.js","webpack:///./src/modules/math/util/date.js","webpack:///external \"timezone/loaded\"","webpack:///./src/modules/math/functions/dateTimeEntity.js","webpack:///./src/modules/math/functions/entity/index.js","webpack:///./src/modules/math/functions/entity/unary.js","webpack:///external \"gamma\"","webpack:///external \"mathp\"","webpack:///./src/modules/math/functions/entity/bilinear.js","webpack:///./src/modules/math/functions/entityPercentage.js","webpack:///./src/modules/math/types/miscGroup.js","webpack:///./src/modules/math/types/conversion.js","webpack:///./src/modules/math/types/color.js","webpack:///./src/modules/math/types/dateTime.js","webpack:///./src/modules/math/resolverContext.js","webpack:///./src/modules/math-formatter/index.js","webpack:///./src/modules/math-formatter/en/index.js","webpack:///./src/modules/math-formatter/en/entity.js","webpack:///./src/modules/math-formatter/data/en-unit-formatting.json","webpack:///./src/modules/math-formatter/data/en-unit-plurals.json","webpack:///./src/modules/math-formatter/util.js","webpack:///./src/modules/math-formatter/defaultLocale.js","webpack:///./src/units.js"],"names":["cleanTokens","type","start","end","Recora","locale","userConstants","tokenizer","resolverContext","setUnits","resolver","setContext","formatter","setLocale","identifier","value","setConstants","text","tokenOptions","result","tokens","ast","resolve","getResult","pretty","format","TOKEN_ASSIGNMENT","TOKEN_BRACKET_CLOSE","TOKEN_BRACKET_OPEN","TOKEN_COLOR","TOKEN_COMMA","TOKEN_CONSTANT","TOKEN_DATE_TIME","TOKEN_FORMATTING_HINT","TOKEN_FUNCTION","TOKEN_NOOP","TOKEN_NUMBER","TOKEN_OPERATOR_ADD","TOKEN_OPERATOR_DIVIDE","TOKEN_OPERATOR_EXPONENT","TOKEN_OPERATOR_FACTORIAL","TOKEN_OPERATOR_MULTIPLY","TOKEN_OPERATOR_NEGATE","TOKEN_OPERATOR_SUBTRACT","TOKEN_PERCENTAGE","TOKEN_PSEUDO_UNIT","TOKEN_UNIT_NAME","TOKEN_UNIT_PREFIX","TOKEN_UNIT_SUFFIX","functions","functionNames","createTokenizerWithLocale","operator","match","token","penalty","assignment","percent","unit","virtualUnit","constant","formattingHint","color","date","Date","year","getFullYear","month","getMonth","getDate","hour","getHours","minute","getMinutes","second","getSeconds","timezone","directionHint","bracket","matches","state","bracketLevel","updateState","function","RegExp","join","noop","whitespace","otherCharacter","default","ref","FUNCTION_ADD","FUNCTION_SUBTRACT","FUNCTION_MULTIPLY","FUNCTION_DIVIDE","FUNCTION_EXPONENT","FUNCTION_SQRT","FUNCTION_CBRT","FUNCTION_NEGATE","FUNCTION_ROUND","FUNCTION_FLOOR","FUNCTION_CEIL","FUNCTION_ABS","FUNCTION_FROUND","FUNCTION_TRUNC","FUNCTION_SIGN","FUNCTION_CLZ32","FUNCTION_FACTORIAL","FUNCTION_SIN","FUNCTION_COS","FUNCTION_TAN","FUNCTION_LOG","FUNCTION_LOG1P","FUNCTION_LOG10","FUNCTION_LOG2","FUNCTION_ACOSH","FUNCTION_ASINH","FUNCTION_ATANH","FUNCTION_COSH","FUNCTION_SINH","FUNCTION_TANH","FUNCTION_SINC","FUNCTION_SEC","FUNCTION_CSC","FUNCTION_COT","FUNCTION_ASEC","FUNCTION_ACSC","FUNCTION_ACOT","FUNCTION_SECH","FUNCTION_CSCH","FUNCTION_COTH","FUNCTION_ASECH","FUNCTION_ACSCH","FUNCTION_ACOTH","FUNCTION_COSC","FUNCTION_TANC","FUNCTION_LIGHTEN","FUNCTION_DARKEN","FUNCTION_MIX","FUNCTION_SCREEN","FUNCTION_OVERLAY","FUNCTION_DODGE","FUNCTION_BURN","FUNCTION_RGB","FUNCTION_RGBA","FUNCTION_HSL","FUNCTION_HSLA","FUNCTION_HSV","FUNCTION_HSVA","defaultTokenizerState","character","stack","remainingText","userState","setTokenArrayStartEndValues","defaultTokenIndexes","matchedText","tokenIndexes","length","accum","index","tokenMatches","push","remainingTokens","shift","remainingMatches","slice","indexOf","tokenStart","tokenEnd","mappedTokens","inputSpec","defaultUserState","flattenRefs","option","spec","options","matchSpec","regexMatch","search","Array","isArray","concat","pop","substring","initialUserState","results","wordRegexpCreator","str","concatCompact","mergeTokenizerSpecs","customWordMatcher","dictionary","matchIndex","transform","toLowerCase","multipleWordsMatcher","words","wordRegexpMatcher","numberReString","toNumber","Number","replace","baseEnLocale","number","key","createEnLocale","name","power","pi","quantity","Math","PI","tau","e","E","phi","sqrt","zeroTime","NODE_BRACKETS","baseBrackets","NODE_ARRAY_GROUP","baseArrayGroup","NODE_FUNCTION","baseFunction","args","NODE_ASSIGNMENT","baseAssignment","NODE_MISC_GROUP","baseMiscGroup","NODE_CONVERSION","baseConversion","entityConversion","pseudoConversion","formatting","NODE_ENTITY","baseEntity","NaN","units","NODE_COMPOSITE_ENTITY","baseCompositeEntity","NODE_PERCENTAGE","basePercentage","NODE_COLOR","baseColor","space","values","alpha","NODE_DATE_TIME","baseDateTime","unitPrefixes","per","square","cubic","unitSuffixes","squared","cubed","wordWithPowerMatcherBase","unitSpecEntry","numberUnlessEmptyString","time","matchCount","amPm","monthPrefixes","monthName","defaultValue","createRegExp","string","createTransformer","valueMatches","transformer","arity","newValue","transformers","createDateMatcher","createRelativeDate","count","dateSpec","tokenIndices","everyOtherFrom","i","startIndex","array","evenIndexElements","oddIndexElements","propagateNull","cb","mapUnlessNull","flatZip","array1","array2","to","min","uncastArray","singleArrayValue","transforms","iter","location","captureGroups","pattern","transformResult","captureGroupsToTransform","transformedCaptureGroups","captureGroupToTransform","bracketTransform","any","lazy","BaseMatcher","isNegative","isLazy","from","Infinity","types","matchStack","captureRanges","minIndex","getMatches","capturedTokens","captureRange","Error","BaseCaptureMatcher","element","startI","lastElementIndex","conforms","getLazyMatchesFrom","getNonLazyMatchesFrom","CaptureElement","CaptureOptions","CaptureWildcard","Pattern","iteration","remainingPatterns","numRemainingPatterns","getSubmatches","remainingPattern","isFirstPattern","isLastPattern","didMatchSubCase","matchedNothing","zeroOrOne","negate","bracketGroup","fn","concatSegments","entityTransform","oneOrMore","segments","FORWARD","BACKWARD","operatorTypes","operatorArity","unaryBindingDirections","getOperatorTypes","createBilinearNode","leftSegment","rightSegment","lhs","rhs","createUnaryNode","bindingDirection","leftSide","rightSide","argument","miscGroup","node","group","createNode","operatorType","createPattern","operators","createForwardOperatorTransform","initialSegment","remainingSegments","createBackwardOperatorTransform","INTERMEDIATE_UNIT","combineUnitNamesPrefixesSuffixes","segment","segmentWithIntermediateUnits","tag","compactMiscGroup","arg","conversionTokens","unitTokens","isNoop","notNoop","isConversionToken","findLeftConversion","tagTypes","tags","conversionTagTypes","conversionTags","remainingTags","findRightConversion","precedingTag","findConversion","conversionsTransform","conversionSegment","pseudoConversions","unitSegmentWithIntermediateUnits","percentage","getEntities","baseEntityValue","undefined","maybeEntities","newEntityValue","entity","entities","unitParts","unitSegments","zippedSegments","getConversionDescriptor","context","unitName","siUnitDescriptor","conversionDescriptors","addUnitValues","lhsUnitValue","rhsUnitValue","unitIsLinear","combineUnits","units1","units2","getFundamentalUnits","unitValue","siUnitDimensions","scaledSiUnitDimensions","unitsAreLinear","unitsAreCompatable","sizeWithoutLengthBug","groupUnitsByFundamentalDimensions","unitNames","unitsWithOneFundamentalQuantity","unitsGroupedByFundamentalType","unitsGroupedByFundamentalTypeThenFundamentalPower","isUnitless","conversionValueNumerator","conversionValueDenominator","calculateConversionValue","direction","siUnitValue","pow","convertFromBase","convertToBase","convertTo","convertToFundamentalUnits","convertComposite","sortedUnitNames","sortedUnits","convertedEntity","remainder","compositeQuantity","floor","remainderQuantity","composite","simplifyUnits","allUnitGroups","unitsToConvertTo","conversionUnits","hex","powerEntity","transformTokens","remainingTokensTransform","remainingTokenSegments","nodes","nodeTypes","allowedTypes","captureGroup","captureGroupTypes","extraneousTypes","typedFunctionTrie","variadicFunctions","extendFunction","functionName","bracketsNode","functionNode","executeFunction","miscGroupNode","conversionNode","resolvedValue","assignmentNode","unresolvedArgs","triePath","func","operationFactory","left","right","leftColor","rightColor","operation","createMixer","valueNode","mix","add","subtract","multiply","divide","screen","overlay","dodge","burn","mixEntity","mixPercentage","lightenDarkenFactory","multiplyDivideFactory","channelMultiply","exponentMath","exponent","lightenMath","darkenMath","multiplyMath","divideMath","lighten","darken","flip2","evolveColor","evolve","evolveWhenUnitless","toX","fundamental","to360","to255","to100","to1","toDegrees","degree","radian","converter","arg1","arg2","arg3","a","rgb","hsl","hsv","addSubtract","leftUtcUnix","rightUtcUnix","milliseconds","abs","dateEntity","millisecond","day","dateTimeToUTCUnix","dateTime","utcUnixToTz","utcUnix","unixTzToDateTime","unix","formattedString","split","addSubtractFactory","millisecondsEntity","offset","newUtcUnix","newUnix","addMath","subtractMath","unitlessFunction","quantityFn","powerFn","cbrt","x","round","ceil","fround","trunc","sign","clz32","factorial","sin","cos","tan","log","log1p","log10","log2","acosh","asinh","atanh","cosh","sinh","tanh","sinc","sec","csc","cot","asec","acsc","acot","sech","csch","coth","asech","acsch","acoth","cosc","tanc","isZero","zeroEntity","rightWithLhsUnits","rightEffectiveUnits","rightFundamentalUnits","entityValue","percentageValue","entityOps","dateTimeOps","dateTimeEntityOps","entityPercentageOps","getUnitPowerForGroupedUnits","unitGroup","pathsForGroupedUnits","unitPower","shouldDivide","leftUnits","rightUnits","resolveFundamentalPowers","leftGroupedUnits","rightGroupedUnits","leftPaths","rightPaths","overlappingPaths","path","combineEntities","leftFundamentalUnits","combineDateTimeEntity","combineValues","convert","conversion","firstUnit","remainingUnits","allUnitsCompatable","conversionSpace","hasAlphaComponent","targetColorSpace","asFunction","withAlpha","convertSpace","resolveDefaults","b","defaultContext","setDate","localeFormatters","en","locales","contextWithFormat","output","localeFormatter","enFormatter","baseNames","formatUnits","isPlural","formatPlural","title","position","isCurrency","base","decimalPlaces","significantFigures","EUR","formatCurrency","toFixed","baseNumberFormatter","prefix","toString","absValue","magnitude","toExponential","baseFormatter","entityFormatter","powers","formatPower","String","orderOfMagnitude","hsxFormatter","hue","colorFormatters","defaultFormatter","unitsString","compositeEntity","formattedEntities","toHex","toISOString","timeDimensions","lengthDimensions","massDimensions","mass","areaDimensions","volumeDimensions","energyDimensions","powerDimensions","memoryDimensions","memory","currencyDimensions","currency","absoluteTemperatureDimensions","absoluteTemperature","noDimensions","gasMarkToK","kToGasMark","k","gasMark"],"mappings":"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A,aAAa,CAAnC,EAAsC;AAC3C,YAAOnQ,OAAOpM,QAAP,CAAgBmc,OAAhB,CAAwB,CAAxB,CAAP;AACD,IAFM,MAEA,IAAII,WAAW,IAAf,EAAqB;AAC1B;AACA,SAAMC,YAAY,4BAAiBD,QAAjB,CAAlB;;AAEA,SAAIA,WAAWtc,KAAKiP,KAAL,CAAWqN,QAAX,CAAX,GAAkC,SAAC,EAAD,EAAOC,SAAP,IAAoB,IAA1D,EAAgE;AAC9D;AACA;AACA,cAAOpQ,OAAOpM,QAAP,CAAgBmc,OAAhB,CAAwB,CAAxB,CAAP;AACD;AACD;AACA,YAAO/P,OAAOpM,QAAP,CAAgBmc,OAAhB,CAAwB,IAAIK,SAA5B,CAAP;AACD;AACD,UAAOpQ,OAAOpM,QAAP,CAAgByc,aAAhB,CAA8B,CAA9B,CAAP;AACD,EAlCD;;AAoCA,KAAMC,gBAAgB,SAAhBA,aAAgB,CAAChQ,OAAD,EAAUN,MAAV;AAAA,UACpBoP,YAAYY,oBAAoBhQ,MAApB,CAAZ,EAAyCA,MAAzC,CADoB;AAAA,EAAtB;;AAGA,KAAMuQ,kBAGQ,cAAK,CACjB,CAACd,UAAD,EAAaK,cAAb,CADiB,EAEjB,eAAWQ,aAAX,CAFiB,CAAL,CAHd;mBAOeC,e;;;;;;AClGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;;;;;AC5IA;;AAEA;AACA,KAAMC,SAAS;AACb,QAAK,GADQ;AAEb,QAAK,GAFQ;AAGb,QAAK,GAHQ;AAIb,QAAK,GAJQ;AAKb,QAAK,GALQ;AAMb,QAAK,GANQ;AAOb,QAAK,GAPQ;AAQb,QAAK,GARQ;AASb,QAAK,GATQ;AAUb,QAAK,GAVQ;AAWb,QAAK,GAXQ;AAYb,QAAK;AAZQ,EAAf;AAcA;;AAEO,KAAMC,oCAAkD,cAC7DC,MAD6D,EAE7D,eAAM,EAAN,CAF6D,EAG7D,aAAI,oBAAWF,MAAX,CAAJ,CAH6D,EAI7D,cAAK,EAAL,CAJ6D,CAAxD;;AAOA,KAAMG,8CAAmB,SAAnBA,gBAAmB,CAAClpB,KAAD;AAAA,UAA2BoM,KAAKiP,KAAL,CAAWjP,KAAK4W,KAAL,CAAWhjB,KAAX,CAAX,CAA3B;AAAA,EAAzB,C;;;;;;;;;;;;;;;;AC1BP;;AACA;;;;AACA;;AACA;;;;;;AAKA,KAAMmpB,eAAe,SAAfA,Y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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash/fp\"), require(\"color-forge\"), require(\"lodash\"), require(\"timezone/loaded\"), require(\"gamma\"), require(\"mathp\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash/fp\", \"color-forge\", \"lodash\", \"timezone/loaded\", \"gamma\", \"mathp\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"recora\"] = factory(require(\"lodash/fp\"), require(\"color-forge\"), require(\"lodash\"), require(\"timezone/loaded\"), require(\"gamma\"), require(\"mathp\"));\n\telse\n\t\troot[\"recora\"] = factory(root[\"lodash/fp\"], root[\"color-forge\"], root[\"lodash\"], root[\"timezone/loaded\"], root[\"gamma\"], root[\"mathp\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_32__, __WEBPACK_EXTERNAL_MODULE_36__, __WEBPACK_EXTERNAL_MODULE_46__, __WEBPACK_EXTERNAL_MODULE_50__, __WEBPACK_EXTERNAL_MODULE_51__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8ac6c5dcb673401da80a\n **/","// @flow\nimport { flow, reject, map, pick, set } from 'lodash/fp';\nimport { TOKEN_NOOP } from './tokenTypes';\nimport createTokenizerWithLocale from './tokenizer';\nimport createEnTokenizerLocale from './tokenizerLocales/en';\nimport transformer from './transformer';\nimport { resolver, defaultContext } from './modules/math';\nimport defaultFormatter from './modules/math-formatter';\nimport units from './units';\nimport type { Tokenizer } from './modules/tokenizer/types';\nimport type { ResolverContext } from './modules/math/types';\nimport type { Formatter } from './modules/math-formatter/types';\n\nconst cleanTokens = flow(\n  reject({ type: TOKEN_NOOP }),\n  reject(({ start, end }) => start >= end),\n  map(pick(['type', 'start', 'end']))\n);\n\nexport default class Recora {\n  tokenizer: Tokenizer\n  resolverContext: ResolverContext\n  resolver: typeof resolver\n  formatter: Formatter\n  userConstants: Object = {}\n\n  constructor({ locale = 'en' }: { locale: string } = {}) {\n    const tokenizer = createTokenizerWithLocale(createEnTokenizerLocale({\n      userConstants: this.userConstants,\n    }));\n    this.tokenizer = tokenizer;\n\n    const resolverContext = defaultContext.setUnits(units);\n    this.resolverContext = resolverContext;\n    this.resolver = resolver.setContext(resolverContext);\n\n    this.formatter = defaultFormatter.setLocale(locale);\n  }\n\n  setConstants(userConstants: Object) {\n    this.userConstants = userConstants;\n    const tokenizer = createTokenizerWithLocale(createEnTokenizerLocale({\n      userConstants: this.userConstants,\n    }));\n    this.tokenizer = tokenizer;\n    return this;\n  }\n\n  setConstant(identifier: string, value: any) {\n    return this.setConstants(set(identifier, value, this.userConstants));\n  }\n\n  getResult(text: string) {\n    const { tokenizer, resolver } = this;\n\n    const tokenOptions = tokenizer(text);\n    let result;\n\n    for (const tokens of tokenOptions) {\n      const ast = transformer(tokens);\n      result = ast ? resolver.resolve(ast) : null;\n      if (result) return { result, tokens };\n    }\n\n    return null;\n  }\n\n  parse(text: string) {\n    const value = this.getResult(text);\n    if (!value) return null;\n\n    const { resolverContext, formatter } = this;\n    const { result, tokens } = value;\n\n    return {\n      text,\n      value: result,\n      pretty: formatter.format(resolverContext, result),\n      tokens: cleanTokens(tokens),\n    };\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash/fp\"\n ** module id = 1\n ** module chunks = 0\n **/","// @flow\nexport const TOKEN_ASSIGNMENT = 'TOKEN_ASSIGNMENT';\nexport const TOKEN_BRACKET_CLOSE = 'TOKEN_BRACKET_CLOSE';\nexport const TOKEN_BRACKET_OPEN = 'TOKEN_BRACKET_OPEN';\nexport const TOKEN_COLOR = 'TOKEN_COLOR';\nexport const TOKEN_COMMA = 'TOKEN_COMMA';\nexport const TOKEN_CONSTANT = 'TOKEN_CONSTANT';\nexport const TOKEN_DATE_TIME = 'TOKEN_DATE_TIME';\nexport const TOKEN_FORMATTING_HINT = 'TOKEN_FORMATTING_HINT';\nexport const TOKEN_FUNCTION = 'TOKEN_FUNCTION';\nexport const TOKEN_NOOP = 'TOKEN_NOOP';\nexport const TOKEN_NUMBER = 'TOKEN_NUMBER';\nexport const TOKEN_OPERATOR_ADD = 'TOKEN_OPERATOR_ADD';\nexport const TOKEN_OPERATOR_DIVIDE = 'TOKEN_OPERATOR_DIVIDE';\nexport const TOKEN_OPERATOR_EXPONENT = 'TOKEN_OPERATOR_EXPONENT';\nexport const TOKEN_OPERATOR_FACTORIAL = 'TOKEN_OPERATOR_FACTORIAL';\nexport const TOKEN_OPERATOR_MULTIPLY = 'TOKEN_OPERATOR_MULTIPLY';\nexport const TOKEN_OPERATOR_NEGATE = 'TOKEN_OPERATOR_NEGATE';\nexport const TOKEN_OPERATOR_SUBTRACT = 'TOKEN_OPERATOR_SUBTRACT';\nexport const TOKEN_PERCENTAGE = 'TOKEN_PERCENTAGE';\nexport const TOKEN_PSEUDO_UNIT = 'TOKEN_PSEUDO_UNIT';\nexport const TOKEN_UNIT_NAME = 'TOKEN_UNIT_NAME';\nexport const TOKEN_UNIT_PREFIX = 'TOKEN_UNIT_PREFIX';\nexport const TOKEN_UNIT_SUFFIX = 'TOKEN_UNIT_SUFFIX';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tokenTypes.js\n **/","// @flow\nimport { values } from 'lodash/fp';\nimport {\n  TOKEN_ASSIGNMENT,\n  TOKEN_BRACKET_CLOSE,\n  TOKEN_BRACKET_OPEN,\n  TOKEN_COLOR,\n  TOKEN_COMMA,\n  TOKEN_DATE_TIME,\n  TOKEN_FUNCTION,\n  TOKEN_NOOP,\n  TOKEN_OPERATOR_ADD,\n  TOKEN_OPERATOR_DIVIDE,\n  TOKEN_OPERATOR_EXPONENT,\n  TOKEN_OPERATOR_FACTORIAL,\n  TOKEN_OPERATOR_MULTIPLY,\n  TOKEN_OPERATOR_NEGATE,\n  TOKEN_OPERATOR_SUBTRACT,\n  TOKEN_PERCENTAGE,\n  TOKEN_UNIT_PREFIX,\n  TOKEN_PSEUDO_UNIT,\n} from './tokenTypes';\nimport * as functions from './modules/math/functions';\nimport createTokenizer from './modules/tokenizer';\nimport type { TokenizerSpec } from './modules/tokenizer/types';\nimport { mergeTokenizerSpecs } from './tokenizerUtil';\n\nconst functionNames = values(functions);\n\n/* eslint-disable max-len */\nconst createTokenizerWithLocale = (locale: TokenizerSpec) => createTokenizer(mergeTokenizerSpecs(locale, {\n  operator: [\n    { match: '**', token: { type: TOKEN_OPERATOR_EXPONENT }, penalty: -1000 },\n    { match: '^', token: { type: TOKEN_OPERATOR_EXPONENT }, penalty: -1000 },\n    { match: /\\*(?!\\*)/, token: { type: TOKEN_OPERATOR_MULTIPLY }, penalty: -1000 },\n    { match: '/', token: { type: TOKEN_OPERATOR_DIVIDE }, penalty: -1000 },\n    { match: '+', token: { type: TOKEN_OPERATOR_ADD }, penalty: -1000 },\n    { match: '-', token: { type: TOKEN_OPERATOR_SUBTRACT }, penalty: -1000 },\n    { match: '-', token: { type: TOKEN_OPERATOR_NEGATE }, penalty: -500 },\n    { match: '!', token: { type: TOKEN_OPERATOR_FACTORIAL }, penalty: -500 },\n  ],\n  assignment: [\n    // Must override reassignment,\n    // Say if you do test = 5 and then test = 6\n    // we need to override the possibility of (test: constant) (=: noop) (6: number)\n    {\n      match: /(\\w+)\\s*=/,\n      token: (token, [, identifier]) => ({ type: TOKEN_ASSIGNMENT, value: identifier }),\n      penalty: -10000,\n    },\n  ],\n  percent: [\n    { match: '%', token: { type: TOKEN_PERCENTAGE }, penalty: -1000 },\n  ],\n  unit: [\n    { match: '/', token: { type: TOKEN_UNIT_PREFIX, value: -1 }, penalty: -1500 },\n  ],\n  virtualUnit: [\n    { match: /(rgb|hs[lv])a?/i, token: token => ({ type: TOKEN_PSEUDO_UNIT, value: token }), penalty: -1500 },\n  ],\n  constant: [],\n  formattingHint: [],\n  color: [\n    { match: /#[0-9a-f]{3,8}/i, token: token => ({ type: TOKEN_COLOR, value: token }), penalty: -1000 },\n  ],\n  date: [\n    {\n      // ISO 8601 RegExp\n      // http://www.pelagodesign.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/\n      // Remove the end question mark so we don't match every single number that's 4 digits\n      match: /([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)/,\n      token: token => {\n        const date = new Date(token); // Spec says Date should parse ISO formats\n\n        const value = {\n          year: date.getFullYear(),\n          month: date.getMonth() + 1,\n          date: date.getDate(),\n          hour: date.getHours(),\n          minute: date.getMinutes(),\n          second: date.getSeconds(),\n          timezone: 'UTC',\n        };\n        return { type: TOKEN_DATE_TIME, value: { value, directionHint: 1 } };\n      },\n      penalty: -50000, // Has to beat multiple numbers\n    },\n  ],\n  bracket: [\n    {\n      match: '(',\n      token: (token, matches, state) => ({ type: TOKEN_BRACKET_OPEN, value: state.bracketLevel }),\n      penalty: -1000,\n      updateState: state => ({ bracketLevel: state.bracketLevel + 1 }),\n    },\n    {\n      match: ')',\n      token: (token, matches, state) => ({ type: TOKEN_BRACKET_CLOSE, value: state.bracketLevel - 1 }),\n      penalty: -1000,\n      updateState: state => ({ bracketLevel: state.bracketLevel - 1 }),\n    },\n    {\n      match: ',',\n      token: { type: TOKEN_COMMA },\n      penalty: -1000,\n    },\n  ],\n  function: [\n    {\n      match: new RegExp(`(${functionNames.join('|')})\\\\b`, 'i'),\n      token: token => ({ type: TOKEN_FUNCTION, value: token }),\n      penalty: -1000,\n    },\n  ],\n  noop: [\n    { match: /[a-z]+/i, token: { type: TOKEN_NOOP }, penalty: 10 },\n  ],\n  whitespace: [\n    { match: /\\s+/, penalty: 0 },\n  ],\n  otherCharacter: [\n    // No numbers, letters, whitespace, operators (except - and !), or brackets\n    // the less this catches, the better the perf\n    { match: /[^\\w\\s*^/+%()]/, penalty: 1000 },\n  ],\n  default: [\n    { ref: 'operator' },\n    { ref: 'assignment' },\n    { ref: 'percent' },\n    { ref: 'number' },\n    { ref: 'unit' },\n    { ref: 'virtualUnit' },\n    { ref: 'constant' },\n    { ref: 'formattingHint' },\n    { ref: 'color' },\n    { ref: 'date' },\n    { ref: 'bracket' },\n    { ref: 'function' },\n    { ref: 'noop' },\n    { ref: 'whitespace' },\n    { ref: 'otherCharacter' },\n  ],\n}), {\n  bracketLevel: 0,\n});\n/* eslint-enable */\n\nexport default createTokenizerWithLocale;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tokenizer.js\n **/","// @flow\n\n// Bilinear operators\nexport const FUNCTION_ADD = 'add';\nexport const FUNCTION_SUBTRACT = 'subtract';\nexport const FUNCTION_MULTIPLY = 'multiply';\nexport const FUNCTION_DIVIDE = 'divide';\nexport const FUNCTION_EXPONENT = 'exponent';\n\n// Entity functions\nexport const FUNCTION_SQRT = 'sqrt';\nexport const FUNCTION_CBRT = 'cbrt';\nexport const FUNCTION_NEGATE = 'negate';\nexport const FUNCTION_ROUND = 'round';\nexport const FUNCTION_FLOOR = 'floor';\nexport const FUNCTION_CEIL = 'ceil';\nexport const FUNCTION_ABS = 'abs';\nexport const FUNCTION_FROUND = 'fround';\nexport const FUNCTION_TRUNC = 'trunc';\nexport const FUNCTION_SIGN = 'sign';\nexport const FUNCTION_CLZ32 = 'clz32';\nexport const FUNCTION_FACTORIAL = 'factorial';\nexport const FUNCTION_SIN = 'sin';\nexport const FUNCTION_COS = 'cos';\nexport const FUNCTION_TAN = 'tan';\nexport const FUNCTION_LOG = 'log';\nexport const FUNCTION_LOG1P = 'log1p';\nexport const FUNCTION_LOG10 = 'log10';\nexport const FUNCTION_LOG2 = 'log2';\nexport const FUNCTION_ACOSH = 'acosh';\nexport const FUNCTION_ASINH = 'asinh';\nexport const FUNCTION_ATANH = 'atanh';\nexport const FUNCTION_COSH = 'cosh';\nexport const FUNCTION_SINH = 'sinh';\nexport const FUNCTION_TANH = 'tanh';\nexport const FUNCTION_SINC = 'sinc';\nexport const FUNCTION_SEC = 'sec';\nexport const FUNCTION_CSC = 'csc';\nexport const FUNCTION_COT = 'cot';\nexport const FUNCTION_ASEC = 'asec';\nexport const FUNCTION_ACSC = 'acsc';\nexport const FUNCTION_ACOT = 'acot';\nexport const FUNCTION_SECH = 'sech';\nexport const FUNCTION_CSCH = 'csch';\nexport const FUNCTION_COTH = 'coth';\nexport const FUNCTION_ASECH = 'asech';\nexport const FUNCTION_ACSCH = 'acsch';\nexport const FUNCTION_ACOTH = 'acoth';\nexport const FUNCTION_COSC = 'cosc';\nexport const FUNCTION_TANC = 'tanc';\n\n// Colour functions\nexport const FUNCTION_LIGHTEN = 'lighten';\nexport const FUNCTION_DARKEN = 'darken';\nexport const FUNCTION_MIX = 'mix';\nexport const FUNCTION_SCREEN = 'screen';\nexport const FUNCTION_OVERLAY = 'overlay';\nexport const FUNCTION_DODGE = 'dodge';\nexport const FUNCTION_BURN = 'burn';\n\n// Constructors\nexport const FUNCTION_RGB = 'rgb';\nexport const FUNCTION_RGBA = 'rgba';\nexport const FUNCTION_HSL = 'hsl';\nexport const FUNCTION_HSLA = 'hsla';\nexport const FUNCTION_HSV = 'hsv';\nexport const FUNCTION_HSVA = 'hsva';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/index.js\n **/","// @flow\nimport {\n  __, startsWith, last, get, map, flatMap, mapValues, flow, assign, sortBy, reduce, drop, range,\n  includes,\n} from 'lodash/fp';\nimport type { Tokenizer, TokenizerSpec, TokenizerState } from './types';\n\nconst defaultTokenizerState = {\n  character: 0,\n  stack: ['default'],\n  penalty: 0,\n  remainingText: '',\n  tokens: [],\n  userState: {},\n};\n\nconst setTokenArrayStartEndValues = (start, defaultTokenIndexes, matchedText, matches, token) => {\n  const tokenIndexes = defaultTokenIndexes || range(1, matches.length);\n\n  const { tokenMatches } = reduce((accum, index) => {\n    accum.tokenMatches.push({\n      token: accum.remainingTokens.shift(),\n      match: includes(index + 1, tokenIndexes) ? accum.remainingMatches.shift() : null,\n    });\n    return accum;\n  }, {\n    tokenMatches: [],\n    remainingTokens: token.slice(),\n    remainingMatches: (matches.length > 1) ? drop(1, matches) : [matchedText],\n  }, range(0, token.length));\n\n  const { tokens: mappedTokens } = reduce((accum, { match, token }) => {\n    let index = -1;\n\n    if (match !== null) index = matchedText.indexOf(match, accum.index);\n    if (index === -1) index = accum.index;\n\n    const tokenStart = start + index;\n    const tokenEnd = tokenStart + (match !== null ? match.length : 0);\n\n    if (token) accum.tokens.push({ ...token, start: tokenStart, end: tokenEnd });\n    accum.index = index; // eslint-disable-line\n\n    return accum;\n  }, {\n    index: 0,\n    tokens: [],\n  }, tokenMatches);\n\n  return mappedTokens;\n};\n\nexport default (inputSpec: TokenizerSpec, defaultUserState: Object = {}): Tokenizer => {\n  const flattenRefs = flatMap(option => (\n    !option.ref\n      ? option\n      : flow(\n        flattenRefs,\n        map(assign(__, option)),\n      )(inputSpec[option.ref])\n  ));\n  const spec = mapValues(flattenRefs, inputSpec);\n\n  function* tokenizer(state: TokenizerState) {\n    const { remainingText } = state;\n\n    if (remainingText.length === 0) {\n      yield { tokens: state.tokens, penalty: state.penalty };\n      return;\n    }\n\n    const options = get(last(state.stack), spec);\n\n    /* eslint-disable no-continue */\n    for (const option of options) {\n      const { match: matchSpec } = option;\n      let matches: ?(string[]) = null;\n\n      if (typeof matchSpec === 'string') {\n        matches = startsWith(matchSpec, remainingText) ? [matchSpec] : null;\n      } else if (matchSpec instanceof RegExp) {\n        const regexMatch = remainingText.search(matchSpec) === 0 && remainingText.match(matchSpec);\n        matches = regexMatch || null;\n      }\n\n      if (!matches) continue;\n\n      const matchedText: string = matches[0];\n      const token = typeof option.token === 'function'\n        ? option.token(matchedText, matches, state.userState)\n        : option.token;\n\n      /*\n      FIXME:\n      Currently the behaviour is if the token is null, don't advance the parser\n      If it's undefined, do advance the parser, but don't log the token\n      Otherwise log the token and advance the parser\n      We need all three of these cases, but it needs to be more explicit\n      */\n      if (token === null) continue;\n\n      const start = state.character;\n      const end = state.character + matchedText.length;\n      let tokens;\n\n      if (!token) {\n        tokens = state.tokens;\n      } else if (Array.isArray(token)) {\n        const mappedTokens =\n          setTokenArrayStartEndValues(start, option.tokenIndexes, matchedText, matches, token);\n        tokens = state.tokens.concat(mappedTokens);\n      } else {\n        tokens = state.tokens.concat({ ...token, start, end });\n      }\n\n      let { stack, userState } = state;\n\n      if (typeof option.pop === 'boolean') stack = stack.slice(0, -1);\n      if (typeof option.pop === 'number') stack = stack.slice(0, -option.pop);\n      if (option.push) stack = stack.concat(option.push);\n\n      if (typeof option.updateState === 'function') {\n        userState = { ...userState, ...option.updateState(userState) };\n      }\n\n      yield* tokenizer({\n        penalty: state.penalty + option.penalty,\n        remainingText: remainingText.substring(matchedText.length),\n        character: end,\n        stack,\n        tokens,\n        userState,\n      });\n    }\n  }\n  /* eslint-enable */\n\n\n  return (text, initialUserState = {}) => {\n    let results = [];\n    const userState = { ...defaultUserState, ...initialUserState };\n    for (const result of tokenizer({ ...defaultTokenizerState, userState, remainingText: text })) {\n      results.push(result);\n    }\n    results = flow(\n      sortBy('penalty'),\n      map('tokens')\n    )(results);\n    return results;\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/tokenizer/index.js\n **/","// @flow\nimport { map, flow, has, join, range, concat, compact, assignWith } from 'lodash/fp';\nimport type { TokenizerSpecEntry, TokenResult } from './modules/tokenizer/types';\n\nconst wordRegexpCreator: (words: number) => RegExp = flow(\n  range(0),\n  map(() => '[a-z]+'),\n  join('\\\\s+'),\n  str => new RegExp(str, 'i')\n);\n\ntype CustomWordMatcher = {\n  dictionary: Object,\n  penalty: number,\n  match: RegExp,\n  matchIndex: number,\n  transform: (matchedWord: string, matches: string[]) => TokenResult,\n};\n\ntype WordMatcher = {\n  type: string,\n  dictionary: Object,\n  penalty: number,\n  words: number,\n};\n\ntype WordRegexpMatcher = {\n  type: string,\n  dictionary: Object,\n  penalty: number,\n  match: RegExp,\n  matchIndex: number,\n};\n\nconst concatCompact = flow(concat, compact);\nexport const mergeTokenizerSpecs = assignWith(concatCompact);\n\nexport const customWordMatcher = ({\n  dictionary,\n  penalty,\n  match,\n  matchIndex,\n  transform,\n}: CustomWordMatcher): TokenizerSpecEntry => ({\n  token: (token, tokens) => {\n    const match = tokens[matchIndex].toLowerCase();\n    return has(match, dictionary)\n      ? transform(dictionary[match], tokens)\n      : null;\n  },\n  match,\n  penalty,\n});\n\nexport const multipleWordsMatcher = ({\n  type,\n  words,\n  dictionary,\n  penalty,\n}: WordMatcher) => customWordMatcher({\n  dictionary,\n  penalty,\n  match: wordRegexpCreator(words),\n  matchIndex: 0,\n  transform: value => ({ type, value }),\n});\n\nexport const wordRegexpMatcher = ({\n  type,\n  dictionary,\n  penalty,\n  match,\n  matchIndex = 0,\n}: WordRegexpMatcher) => customWordMatcher({\n  dictionary,\n  penalty,\n  match,\n  matchIndex,\n  transform: value => ({ type, value }),\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tokenizerUtil.js\n **/","// @flow\nimport { keys, concat } from 'lodash/fp';\nimport constants from '../../modules/math/constants';\nimport type { TokenizerSpec } from '../../modules/tokenizer/types';\nimport {\n  TOKEN_NUMBER, TOKEN_CONSTANT, TOKEN_PERCENTAGE, TOKEN_FORMATTING_HINT,\n} from '../../tokenTypes';\nimport unit from './unit';\nimport date from './date';\nimport { mergeTokenizerSpecs } from '../../tokenizerUtil';\n\n\nconst numberReString = '\\\\d(?:,\\\\d|\\\\d)*(?:\\\\.\\\\d+)?';\nconst toNumber = value => Number(value.replace(/,/g, '') || 0);\n\nconst baseEnLocale: TokenizerSpec = {\n  number: [\n    {\n      // Don't match commas when you write `add(1, 1)`\n      match: new RegExp(numberReString),\n      token: token => ({ type: TOKEN_NUMBER, value: toNumber(token) }),\n      penalty: -1000,\n    },\n  ],\n  percent: [\n    { match: /\\bper\\s*cent/i, token: { type: TOKEN_PERCENTAGE }, penalty: -1000 },\n  ],\n  formattingHint: [\n    {\n      match: /\\bbase\\s+(\\d+)\\b/i,\n      token: (token, tokens) => ({\n        type: TOKEN_FORMATTING_HINT,\n        value: {\n          key: 'base',\n          value: Number(tokens[1]),\n        },\n      }),\n      penalty: -2000,\n    },\n    {\n      match: /\\boct(?:al)?\\b/i,\n      token: { type: TOKEN_FORMATTING_HINT, value: { key: 'base', value: 8 } },\n      penalty: -2000,\n    },\n    {\n      match: /\\bbin(?:ary)?\\b/i,\n      token: { type: TOKEN_FORMATTING_HINT, value: { key: 'base', value: 2 } },\n      penalty: -2000,\n    },\n    {\n      match: /\\bhex(?:adecimal)?\\b/i,\n      token: { type: TOKEN_FORMATTING_HINT, value: { key: 'base', value: 16 } },\n      penalty: -2000,\n    },\n  ],\n  unit,\n  date,\n};\n\n/* eslint-disable max-len */\nconst createEnLocale = ({\n  userConstants,\n}: {\n  userConstants: Object\n}): TokenizerSpec => mergeTokenizerSpecs(baseEnLocale, {\n  constant: [\n    {\n      match: new RegExp(\n        `(${concat(keys(constants), keys(userConstants)).join('|')})(\\\\^${numberReString}|)\\\\b`,\n        'i'\n      ),\n      token: (token, [, name, power]) => ({\n        type: TOKEN_CONSTANT,\n        value: {\n          value: (name in userConstants ? userConstants[name] : constants[name]),\n          power: (power ? toNumber(power.substring(1)) : 1),\n        },\n      }),\n      penalty: -5000,\n    },\n  ],\n});\n/* eslint-enable */\n\nexport default createEnLocale;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tokenizerLocales/en/index.js\n **/","// @flow\nimport { baseEntity } from './types';\n\nexport default {\n  pi: { ...baseEntity, quantity: Math.PI },\n  tau: { ...baseEntity, quantity: 2 * Math.PI },\n  e: { ...baseEntity, quantity: Math.E },\n  phi: { ...baseEntity, quantity: (1 + Math.sqrt(5)) / 2 },\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/constants.js\n **/","// @flow\n/* eslint-disable max-len */\nexport type Node = Object;\n\nexport const zeroTime = {\n  year: null,\n  month: null,\n  date: null,\n  hour: null,\n  minute: null,\n  second: null,\n  timezone: 'UTC',\n};\n\n// NOTE: We're using the timezone library, so months are 1-based (sane)\nexport type DateTime = {\n  year: ?number,\n  month: ?number,\n  date: ?number,\n  hour: ?number,\n  minute: ?number,\n  second: ?number,\n  timezone: ?string,\n};\nexport type DimensionTransformer = {\n  convertToBase: (value: number) => number,\n  convertFromBase: (value: number) => number,\n};\nexport type UnitName = string;\nexport type UnitValue = number;\nexport type Units = { [key: UnitName]: UnitValue };\nexport type ConversionDescriptor = [number | DimensionTransformer, Units];\nexport type ConversionDescriptors = { [key: UnitName]: ConversionDescriptor };\n\nexport type ResolverContext = {\n  conversionDescriptors: ConversionDescriptors,\n  date: DateTime,\n  setUnits: (conversionDescriptors: ConversionDescriptors) => ResolverContext,\n  setDate: (dateTime: DateTime) => ResolverContext,\n};\n\n\nexport type BracketsNode = Node &\n  { type: 'NODE_BRACKETS', value: ?Node };\nexport const NODE_BRACKETS = 'NODE_BRACKETS';\nexport const baseBrackets: BracketsNode =\n  { type: NODE_BRACKETS, value: null };\n\nexport type ArrayGroupNode = Node &\n  { type: 'NODE_ARRAY_GROUP', value: Node[] };\nexport const NODE_ARRAY_GROUP = 'NODE_ARRAY_GROUP';\nexport const baseArrayGroup: ArrayGroupNode =\n  { type: NODE_ARRAY_GROUP, value: [] };\n\nexport type FunctionNode = Node &\n  { type: 'NODE_FUNCTION', name: string, args: Node[] };\nexport const NODE_FUNCTION = 'NODE_FUNCTION';\nexport const baseFunction: FunctionNode =\n  { type: NODE_FUNCTION, name: '', args: [] };\n\nexport type AssignmentNode = Node &\n  { type: 'NODE_ASSIGNMENT', identifier: string, value: ?Node };\nexport const NODE_ASSIGNMENT = 'NODE_ASSIGNMENT';\nexport const baseAssignment: AssignmentNode =\n  { type: NODE_ASSIGNMENT, identifier: '', value: null };\n\nexport type MiscGroupNode = Node &\n  { type: 'NODE_MISC_GROUP', value: Node[] };\nexport const NODE_MISC_GROUP = 'NODE_MISC_GROUP';\nexport const baseMiscGroup: MiscGroupNode =\n  { type: NODE_MISC_GROUP, value: [] };\n\nexport type ConversionNode = Node &\n  { type: 'NODE_CONVERSION', value: ?Node, entityConversion: Units[], pseudoConversion: ?string, formatting: Object };\nexport const NODE_CONVERSION = 'NODE_CONVERSION';\nexport const baseConversion: ConversionNode =\n  { type: NODE_CONVERSION, value: null, entityConversion: [], pseudoConversion: null, formatting: {} };\n\nexport type EntityNode = Node &\n  { type: 'NODE_ENTITY', quantity: number, units: Units, formatting: {} };\nexport const NODE_ENTITY = 'NODE_ENTITY';\nexport const baseEntity: EntityNode =\n  { type: NODE_ENTITY, quantity: NaN, units: {}, formatting: {} };\n\nexport type CompositeEntityNode = Node &\n  { type: 'NODE_COMPOSITE_ENTITY', value: EntityNode[] };\nexport const NODE_COMPOSITE_ENTITY = 'NODE_COMPOSITE_ENTITY';\nexport const baseCompositeEntity: CompositeEntityNode =\n  { type: 'NODE_COMPOSITE_ENTITY', value: [] };\n\nexport type PercentageNode = Node &\n  { type: 'NODE_PERCENTAGE', value: number };\nexport const NODE_PERCENTAGE = 'NODE_PERCENTAGE';\nexport const basePercentage: PercentageNode =\n  { type: 'NODE_PERCENTAGE', value: NaN };\n\nexport type ColorNode = Node &\n  { type: 'NODE_COLOR', space: string, values: [number, number, number], alpha: number };\nexport const NODE_COLOR = 'NODE_COLOR';\nexport const baseColor: ColorNode =\n  { type: NODE_COLOR, space: 'rgb', values: [0, 0, 0], alpha: 1, formatting: {} };\n\n// directionHint is used for miscGroup to work out whether to add or subtract an entity\nexport type DateTimeNode = Node &\n  { type: 'NODE_DATE_TIME', value: DateTime, directionHint: number };\nexport const NODE_DATE_TIME = 'NODE_DATE_TIME';\nexport const baseDateTime: DateTimeNode =\n  { type: NODE_DATE_TIME, value: zeroTime, directionHint: 1 };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/types/index.js\n **/","// @flow\nimport type { TokenizerSpecEntries } from '../../modules/tokenizer/types';\nimport {\n  TOKEN_UNIT_NAME,\n  TOKEN_UNIT_PREFIX,\n  TOKEN_UNIT_SUFFIX,\n} from '../../tokenTypes';\nimport oneWordUnits from '../../../data/en/1-word-units.json';\nimport twoWordUnits from '../../../data/en/2-word-units.json';\nimport threeWordUnits from '../../../data/en/3-word-units.json';\nimport abbreviations from '../../../data/en/abbreviations.json';\nimport { multipleWordsMatcher, wordRegexpMatcher, customWordMatcher } from '../../tokenizerUtil';\n\nconst unitPrefixes = {\n  per: -1,\n  square: 2,\n  cubic: 3,\n};\nconst unitSuffixes = {\n  squared: 2,\n  cubed: 3,\n};\n\nconst wordWithPowerMatcherBase = {\n  match: /([a-z]+)(\\^-?\\d+(?:\\.\\d+)?)/i,\n  matchIndex: 1,\n  transform: (value, tokens) => ([\n    { type: TOKEN_UNIT_NAME, value },\n    { type: TOKEN_UNIT_SUFFIX, value: Number(tokens[2].substring(1)) },\n  ]),\n};\n\n/* eslint-disable max-len */\nconst unitSpecEntry: TokenizerSpecEntries = [\n  multipleWordsMatcher({ words: 3, type: TOKEN_UNIT_NAME, dictionary: threeWordUnits, penalty: -600 }),\n  multipleWordsMatcher({ words: 2, type: TOKEN_UNIT_NAME, dictionary: twoWordUnits, penalty: -500 }),\n  multipleWordsMatcher({ words: 1, type: TOKEN_UNIT_NAME, dictionary: oneWordUnits, penalty: -400 }),\n  multipleWordsMatcher({ words: 1, type: TOKEN_UNIT_PREFIX, dictionary: unitPrefixes, penalty: -300 }),\n  multipleWordsMatcher({ words: 1, type: TOKEN_UNIT_SUFFIX, dictionary: unitSuffixes, penalty: -300 }),\n  wordRegexpMatcher({\n    type: TOKEN_UNIT_NAME,\n    dictionary: abbreviations,\n    match: /([a-z]+|[£$€]|)/i,\n    matchIndex: 1,\n    penalty: -200,\n  }),\n  customWordMatcher({\n    ...wordWithPowerMatcherBase,\n    dictionary: oneWordUnits,\n    penalty: -5000,\n  }),\n  customWordMatcher({\n    ...wordWithPowerMatcherBase,\n    dictionary: abbreviations,\n    penalty: -3000,\n  }),\n];\n/* eslint-enable */\n\nexport default unitSpecEntry;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tokenizerLocales/en/unit.js\n **/","module.exports = {\n\t\"second\": \"second\",\n\t\"seconds\": \"second\",\n\t\"minute\": \"minute\",\n\t\"minutes\": \"minute\",\n\t\"hour\": \"hour\",\n\t\"hours\": \"hour\",\n\t\"day\": \"day\",\n\t\"days\": \"day\",\n\t\"weekday\": \"weekday\",\n\t\"weekdays\": \"weekday\",\n\t\"week\": \"week\",\n\t\"weeks\": \"week\",\n\t\"fortnight\": \"fortnight\",\n\t\"fortnights\": \"fortnight\",\n\t\"month\": \"month\",\n\t\"months\": \"month\",\n\t\"year\": \"year\",\n\t\"years\": \"year\",\n\t\"decade\": \"decade\",\n\t\"decades\": \"decade\",\n\t\"century\": \"century\",\n\t\"centuries\": \"century\",\n\t\"meter\": \"meter\",\n\t\"metre\": \"meter\",\n\t\"meters\": \"meter\",\n\t\"metres\": \"meter\",\n\t\"inch\": \"inch\",\n\t\"inches\": \"inch\",\n\t\"foot\": \"foot\",\n\t\"feet\": \"foot\",\n\t\"yard\": \"yard\",\n\t\"yards\": \"yard\",\n\t\"mile\": \"mile\",\n\t\"miles\": \"mile\",\n\t\"league\": \"league\",\n\t\"leagues\": \"league\",\n\t\"fathom\": \"fathom\",\n\t\"fathoms\": \"fathom\",\n\t\"furlong\": \"furlong\",\n\t\"furlongs\": \"furlong\",\n\t\"parsec\": \"parsec\",\n\t\"parsecs\": \"parsec\",\n\t\"angstrom\": \"angstrom\",\n\t\"angstroms\": \"angstrom\",\n\t\"gram\": \"gram\",\n\t\"grams\": \"gram\",\n\t\"tonne\": \"tonne\",\n\t\"tonnes\": \"tonne\",\n\t\"ounce\": \"ounce\",\n\t\"ounces\": \"ounce\",\n\t\"pound\": \"pound\",\n\t\"pounds\": \"pound\",\n\t\"stone\": \"stone\",\n\t\"stones\": \"stone\",\n\t\"acre\": \"acre\",\n\t\"acres\": \"acre\",\n\t\"hectare\": \"hectare\",\n\t\"hectares\": \"hectare\",\n\t\"liter\": \"liter\",\n\t\"litre\": \"liter\",\n\t\"liters\": \"liter\",\n\t\"litres\": \"liter\",\n\t\"gallon\": \"gallon\",\n\t\"gallons\": \"gallon\",\n\t\"quart\": \"quart\",\n\t\"quarts\": \"quart\",\n\t\"cup\": \"cup\",\n\t\"cups\": \"cup\",\n\t\"teaspoon\": \"teaspoon\",\n\t\"teaspoons\": \"teaspoon\",\n\t\"tablespoon\": \"tablespoon\",\n\t\"tablespoons\": \"tablespoon\",\n\t\"drop\": \"drop\",\n\t\"drops\": \"drop\",\n\t\"joule\": \"Joule\",\n\t\"joules\": \"Joule\",\n\t\"calorie\": \"Calorie\",\n\t\"calories\": \"Calorie\",\n\t\"btu\": \"BTU\",\n\t\"therm\": \"therm\",\n\t\"therms\": \"therm\",\n\t\"watt\": \"Watt\",\n\t\"watts\": \"Watt\",\n\t\"bit\": \"bit\",\n\t\"bits\": \"bit\",\n\t\"byte\": \"byte\",\n\t\"bytes\": \"byte\",\n\t\"aud\": \"AUD\",\n\t\"bgn\": \"BGN\",\n\t\"lev\": \"BGN\",\n\t\"levs\": \"BGN\",\n\t\"brl\": \"BRL\",\n\t\"cad\": \"CAD\",\n\t\"chf\": \"CHF\",\n\t\"cny\": \"CNY\",\n\t\"yuan\": \"CNY\",\n\t\"yuans\": \"CNY\",\n\t\"czk\": \"CZK\",\n\t\"koruna\": \"CZK\",\n\t\"korunas\": \"CZK\",\n\t\"dkk\": \"DKK\",\n\t\"eur\": \"EUR\",\n\t\"euro\": \"EUR\",\n\t\"euros\": \"EUR\",\n\t\"gbp\": \"GBP\",\n\t\"quid\": \"GBP\",\n\t\"sterling\": \"GBP\",\n\t\"quids\": \"GBP\",\n\t\"sterlings\": \"GBP\",\n\t\"hkd\": \"HKD\",\n\t\"hrk\": \"HRK\",\n\t\"kuna\": \"HRK\",\n\t\"kunas\": \"HRK\",\n\t\"huf\": \"HUF\",\n\t\"forint\": \"HUF\",\n\t\"forints\": \"HUF\",\n\t\"idr\": \"IDR\",\n\t\"rupiah\": \"IDR\",\n\t\"rupiahs\": \"IDR\",\n\t\"ils\": \"ILS\",\n\t\"shekel\": \"ILS\",\n\t\"sheqel\": \"ILS\",\n\t\"shekels\": \"ILS\",\n\t\"sheqels\": \"ILS\",\n\t\"inr\": \"INR\",\n\t\"rupee\": \"INR\",\n\t\"rupees\": \"INR\",\n\t\"jpy\": \"JPY\",\n\t\"yen\": \"JPY\",\n\t\"yens\": \"JPY\",\n\t\"krw\": \"KRW\",\n\t\"won\": \"KRW\",\n\t\"wons\": \"KRW\",\n\t\"mxn\": \"MXN\",\n\t\"myr\": \"MYR\",\n\t\"ringgit\": \"MYR\",\n\t\"ringgits\": \"MYR\",\n\t\"nok\": \"NOK\",\n\t\"nzd\": \"NZD\",\n\t\"php\": \"PHP\",\n\t\"pln\": \"PLN\",\n\t\"zloty\": \"PLN\",\n\t\"zloties\": \"PLN\",\n\t\"ron\": \"RON\",\n\t\"leu\": \"RON\",\n\t\"leus\": \"RON\",\n\t\"rub\": \"RUB\",\n\t\"ruble\": \"RUB\",\n\t\"rubles\": \"RUB\",\n\t\"sek\": \"SEK\",\n\t\"sgd\": \"SGD\",\n\t\"thb\": \"THB\",\n\t\"baht\": \"THB\",\n\t\"bahts\": \"THB\",\n\t\"try\": \"TRY\",\n\t\"lira\": \"TRY\",\n\t\"liras\": \"TRY\",\n\t\"usd\": \"USD\",\n\t\"dollar\": \"USD\",\n\t\"dollars\": \"USD\",\n\t\"zar\": \"ZAR\",\n\t\"rand\": \"ZAR\",\n\t\"rands\": \"ZAR\",\n\t\"femtosecond\": \"femtosecond\",\n\t\"femtoseconds\": \"femtosecond\",\n\t\"picosecond\": \"picosecond\",\n\t\"picoseconds\": \"picosecond\",\n\t\"nanosecond\": \"nanosecond\",\n\t\"nanoseconds\": \"nanosecond\",\n\t\"microsecond\": \"microsecond\",\n\t\"microseconds\": \"microsecond\",\n\t\"millisecond\": \"millisecond\",\n\t\"milliseconds\": \"millisecond\",\n\t\"femtometer\": \"femtometer\",\n\t\"femtometre\": \"femtometer\",\n\t\"fermi\": \"femtometer\",\n\t\"femtometers\": \"femtometer\",\n\t\"femtometres\": \"femtometer\",\n\t\"fermis\": \"femtometer\",\n\t\"picometer\": \"picometer\",\n\t\"picometre\": \"picometer\",\n\t\"picometers\": \"picometer\",\n\t\"picometres\": \"picometer\",\n\t\"nanometer\": \"nanometer\",\n\t\"nanometre\": \"nanometer\",\n\t\"nanometers\": \"nanometer\",\n\t\"nanometres\": \"nanometer\",\n\t\"micrometer\": \"micrometer\",\n\t\"micrometre\": \"micrometer\",\n\t\"micrometers\": \"micrometer\",\n\t\"micrometres\": \"micrometer\",\n\t\"millimeter\": \"millimeter\",\n\t\"millimetre\": \"millimeter\",\n\t\"millimeters\": \"millimeter\",\n\t\"millimetres\": \"millimeter\",\n\t\"centimeter\": \"centimeter\",\n\t\"centimetre\": \"centimeter\",\n\t\"centimeters\": \"centimeter\",\n\t\"centimetres\": \"centimeter\",\n\t\"kilometer\": \"kilometer\",\n\t\"kilometre\": \"kilometer\",\n\t\"kilometers\": \"kilometer\",\n\t\"kilometres\": \"kilometer\",\n\t\"megameter\": \"megameter\",\n\t\"megametre\": \"megameter\",\n\t\"megameters\": \"megameter\",\n\t\"megametres\": \"megameter\",\n\t\"gigameter\": \"gigameter\",\n\t\"gigametre\": \"gigameter\",\n\t\"gigameters\": \"gigameter\",\n\t\"gigametres\": \"gigameter\",\n\t\"terameter\": \"terameter\",\n\t\"terametre\": \"terameter\",\n\t\"terameters\": \"terameter\",\n\t\"terametres\": \"terameter\",\n\t\"petameter\": \"petameter\",\n\t\"petametre\": \"petameter\",\n\t\"petameters\": \"petameter\",\n\t\"petametres\": \"petameter\",\n\t\"femtogram\": \"femtogram\",\n\t\"femtograms\": \"femtogram\",\n\t\"picogram\": \"picogram\",\n\t\"picograms\": \"picogram\",\n\t\"nanogram\": \"nanogram\",\n\t\"nanograms\": \"nanogram\",\n\t\"microgram\": \"microgram\",\n\t\"micrograms\": \"microgram\",\n\t\"milligram\": \"milligram\",\n\t\"milligrams\": \"milligram\",\n\t\"kilogram\": \"kilogram\",\n\t\"kilograms\": \"kilogram\",\n\t\"megagram\": \"megagram\",\n\t\"megagrams\": \"megagram\",\n\t\"gigagram\": \"gigagram\",\n\t\"gigagrams\": \"gigagram\",\n\t\"teragram\": \"teragram\",\n\t\"teragrams\": \"teragram\",\n\t\"petagram\": \"petagram\",\n\t\"petagrams\": \"petagram\",\n\t\"milliliter\": \"milliliter\",\n\t\"millilitre\": \"milliliter\",\n\t\"milliliters\": \"milliliter\",\n\t\"millilitres\": \"milliliter\",\n\t\"centiliter\": \"centiliter\",\n\t\"centilitre\": \"centiliter\",\n\t\"centiliters\": \"centiliter\",\n\t\"centilitres\": \"centiliter\",\n\t\"femtojoule\": \"femtojoule\",\n\t\"femtojoules\": \"femtojoule\",\n\t\"picojoule\": \"picojoule\",\n\t\"picojoules\": \"picojoule\",\n\t\"nanojoule\": \"nanojoule\",\n\t\"nanojoules\": \"nanojoule\",\n\t\"microjoule\": \"microjoule\",\n\t\"microjoules\": \"microjoule\",\n\t\"millijoule\": \"millijoule\",\n\t\"millijoules\": \"millijoule\",\n\t\"centijoule\": \"centijoule\",\n\t\"centijoules\": \"centijoule\",\n\t\"kilojoule\": \"kilojoule\",\n\t\"kilojoules\": \"kilojoule\",\n\t\"megajoule\": \"megajoule\",\n\t\"megajoules\": \"megajoule\",\n\t\"gigajoule\": \"gigajoule\",\n\t\"gigajoules\": \"gigajoule\",\n\t\"terajoule\": \"terajoule\",\n\t\"terajoules\": \"terajoule\",\n\t\"petajoule\": \"petajoule\",\n\t\"petajoules\": \"petajoule\",\n\t\"femtowatt\": \"femtowatt\",\n\t\"femtowatts\": \"femtowatt\",\n\t\"picowatt\": \"picowatt\",\n\t\"picowatts\": \"picowatt\",\n\t\"nanowatt\": \"nanowatt\",\n\t\"nanowatts\": \"nanowatt\",\n\t\"microwatt\": \"microwatt\",\n\t\"microwatts\": \"microwatt\",\n\t\"milliwatt\": \"milliwatt\",\n\t\"milliwatts\": \"milliwatt\",\n\t\"kilowatt\": \"kilowatt\",\n\t\"kilowatts\": \"kilowatt\",\n\t\"megawatt\": \"megawatt\",\n\t\"megawatts\": \"megawatt\",\n\t\"gigawatt\": \"gigawatt\",\n\t\"gigawatts\": \"gigawatt\",\n\t\"terawatt\": \"terawatt\",\n\t\"terawatts\": \"terawatt\",\n\t\"petawatt\": \"petawatt\",\n\t\"petawatts\": \"petawatt\",\n\t\"kilobit\": \"kilobit\",\n\t\"kilobits\": \"kilobit\",\n\t\"megabit\": \"megabit\",\n\t\"megabits\": \"megabit\",\n\t\"gigabit\": \"gigabit\",\n\t\"gigabits\": \"gigabit\",\n\t\"terabit\": \"terabit\",\n\t\"terabits\": \"terabit\",\n\t\"petabit\": \"petabit\",\n\t\"petabits\": \"petabit\",\n\t\"kibibit\": \"kibibit\",\n\t\"kibibits\": \"kibibit\",\n\t\"mebibit\": \"mebibit\",\n\t\"mebibits\": \"mebibit\",\n\t\"gibibit\": \"gibibit\",\n\t\"gibibits\": \"gibibit\",\n\t\"tebibit\": \"tebibit\",\n\t\"tebibits\": \"tebibit\",\n\t\"pebibit\": \"pebibit\",\n\t\"pebibits\": \"pebibit\",\n\t\"kilobyte\": \"kilobyte\",\n\t\"kilobytes\": \"kilobyte\",\n\t\"megabyte\": \"megabyte\",\n\t\"megabytes\": \"megabyte\",\n\t\"gigabyte\": \"gigabyte\",\n\t\"gigabytes\": \"gigabyte\",\n\t\"terabyte\": \"terabyte\",\n\t\"terabytes\": \"terabyte\",\n\t\"petabyte\": \"petabyte\",\n\t\"petabytes\": \"petabyte\",\n\t\"kibibyte\": \"kibibyte\",\n\t\"kibibytes\": \"kibibyte\",\n\t\"mebibyte\": \"mebibyte\",\n\t\"mebibytes\": \"mebibyte\",\n\t\"gibibyte\": \"gibibyte\",\n\t\"gibibytes\": \"gibibyte\",\n\t\"tebibyte\": \"tebibyte\",\n\t\"tebibytes\": \"tebibyte\",\n\t\"pebibyte\": \"pebibyte\",\n\t\"pebibytes\": \"pebibyte\",\n\t\"degree\": \"degree\",\n\t\"degrees\": \"degree\",\n\t\"radian\": \"radian\",\n\t\"radians\": \"radian\",\n\t\"arcminute\": \"arcminute\",\n\t\"arcminutes\": \"arcminute\",\n\t\"arcsecond\": \"arcsecond\",\n\t\"arcseconds\": \"arcsecond\",\n\t\"kelvin\": \"Kelvin\",\n\t\"kelvins\": \"Kelvin\",\n\t\"celsius\": \"Celsius\",\n\t\"centigrade\": \"Celsius\",\n\t\"celsiuses\": \"Celsius\",\n\t\"centigrades\": \"Celsius\",\n\t\"fahrenheit\": \"Fahrenheit\",\n\t\"fahrenheits\": \"Fahrenheit\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./data/en/1-word-units.json\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = {\n\t\"light year\": \"light year\",\n\t\"light years\": \"light year\",\n\t\"nautical mile\": \"nautical mile\",\n\t\"nautical miles\": \"nautical mile\",\n\t\"us gallon\": \"us gallon\",\n\t\"us gallons\": \"us gallon\",\n\t\"us cup\": \"US cup\",\n\t\"us cups\": \"US cup\",\n\t\"fluid ounce\": \"fluid ounce\",\n\t\"fluid ounces\": \"fluid ounce\",\n\t\"electron volt\": \"electron volt\",\n\t\"electron volts\": \"electron volt\",\n\t\"degrees kelvin\": \"Kelvin\",\n\t\"degrees kelvins\": \"Kelvin\",\n\t\"degrees celsius\": \"Celsius\",\n\t\"degrees celsiuses\": \"Celsius\",\n\t\"degrees fahrenheit\": \"Fahrenheit\",\n\t\"degrees fahrenheits\": \"Fahrenheit\",\n\t\"degrees rankine\": \"degrees Rankine\",\n\t\"degrees rankines\": \"degrees Rankine\",\n\t\"aus dollar\": \"AUD\",\n\t\"australian dollar\": \"AUD\",\n\t\"aus dollars\": \"AUD\",\n\t\"australian dollars\": \"AUD\",\n\t\"bulgarian lev\": \"BGN\",\n\t\"bulgarian levs\": \"BGN\",\n\t\"brazilian real\": \"BRL\",\n\t\"brazilian reals\": \"BRL\",\n\t\"canadian dollar\": \"CAD\",\n\t\"canadian dollars\": \"CAD\",\n\t\"swiss franc\": \"CHF\",\n\t\"swiss francs\": \"CHF\",\n\t\"chinese yuan\": \"CNY\",\n\t\"chinese yuans\": \"CNY\",\n\t\"czech koruna\": \"CZK\",\n\t\"czech korunas\": \"CZK\",\n\t\"danish krone\": \"DKK\",\n\t\"danish krones\": \"DKK\",\n\t\"british pound\": \"GBP\",\n\t\"pound sterling\": \"GBP\",\n\t\"pounds sterling\": \"GBP\",\n\t\"british pounds\": \"GBP\",\n\t\"pound sterlings\": \"GBP\",\n\t\"pounds sterlings\": \"GBP\",\n\t\"croatian kuna\": \"HRK\",\n\t\"croatian kunas\": \"HRK\",\n\t\"hungarian forint\": \"HUF\",\n\t\"hungarian forints\": \"HUF\",\n\t\"undonesian rupiah\": \"IDR\",\n\t\"undonesian rupiahs\": \"IDR\",\n\t\"israeli shekel\": \"ILS\",\n\t\"israeli sheqel\": \"ILS\",\n\t\"israeli shekels\": \"ILS\",\n\t\"israeli sheqels\": \"ILS\",\n\t\"indian rupee\": \"INR\",\n\t\"indian rupees\": \"INR\",\n\t\"japanese yen\": \"JPY\",\n\t\"japanese yens\": \"JPY\",\n\t\"korean won\": \"KRW\",\n\t\"korean wons\": \"KRW\",\n\t\"mexican peso\": \"MXN\",\n\t\"mexican pesos\": \"MXN\",\n\t\"malaysian ringgit\": \"MYR\",\n\t\"malaysian ringgits\": \"MYR\",\n\t\"philippine peso\": \"PHP\",\n\t\"philippine pesos\": \"PHP\",\n\t\"polish zloty\": \"PLN\",\n\t\"polish zloties\": \"PLN\",\n\t\"romanian leu\": \"RON\",\n\t\"romanian leus\": \"RON\",\n\t\"russian ruble\": \"RUB\",\n\t\"russian rubles\": \"RUB\",\n\t\"swedish krona\": \"SEK\",\n\t\"swedish kronas\": \"SEK\",\n\t\"singapore dollar\": \"SGD\",\n\t\"singapore dollars\": \"SGD\",\n\t\"thai baht\": \"THB\",\n\t\"thai bahts\": \"THB\",\n\t\"turkish lira\": \"TRY\",\n\t\"turkish liras\": \"TRY\",\n\t\"us dollar\": \"USD\",\n\t\"american dollar\": \"USD\",\n\t\"us dollars\": \"USD\",\n\t\"american dollars\": \"USD\",\n\t\"african rand\": \"ZAR\",\n\t\"african rands\": \"ZAR\",\n\t\"degree kelvin\": \"Kelvin\",\n\t\"degree kelvins\": \"Kelvin\",\n\t\"degree celsius\": \"Celsius\",\n\t\"degree centigrade\": \"Celsius\",\n\t\"degrees centigrade\": \"Celsius\",\n\t\"degree celsiuses\": \"Celsius\",\n\t\"degree centigrades\": \"Celsius\",\n\t\"degrees centigrades\": \"Celsius\",\n\t\"gas mark\": \"gas mark\",\n\t\"gas marks\": \"gas mark\",\n\t\"degree fahrenheit\": \"Fahrenheit\",\n\t\"degree fahrenheits\": \"Fahrenheit\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./data/en/2-word-units.json\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = {\n\t\"hong kong dollar\": \"HKD\",\n\t\"hong kong dollars\": \"HKD\",\n\t\"israeli new shekel\": \"ILS\",\n\t\"israeli new sheqel\": \"ILS\",\n\t\"israeli new shekels\": \"ILS\",\n\t\"israeli new sheqels\": \"ILS\",\n\t\"new zealand dollar\": \"NZD\",\n\t\"new zealand dollars\": \"NZD\",\n\t\"south african rand\": \"ZAR\",\n\t\"south african rands\": \"ZAR\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./data/en/3-word-units.json\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = {\n\t\"ms\": \"millisecond\",\n\t\"s\": \"second\",\n\t\"sec\": \"second\",\n\t\"secs\": \"second\",\n\t\"min\": \"minute\",\n\t\"mins\": \"minute\",\n\t\"h\": \"hour\",\n\t\"hr\": \"hour\",\n\t\"hs\": \"hour\",\n\t\"hrs\": \"hour\",\n\t\"d\": \"day\",\n\t\"dy\": \"day\",\n\t\"ds\": \"day\",\n\t\"dies\": \"day\",\n\t\"wk\": \"week\",\n\t\"wks\": \"week\",\n\t\"yr\": \"year\",\n\t\"yrs\": \"year\",\n\t\"mg\": \"milligram\",\n\t\"mgs\": \"milligram\",\n\t\"g\": \"gram\",\n\t\"gs\": \"gram\",\n\t\"kg\": \"kilogram\",\n\t\"kilo\": \"kilogram\",\n\t\"kgs\": \"kilogram\",\n\t\"kilos\": \"kilogram\",\n\t\"oz\": \"ounce\",\n\t\"ozs\": \"ounce\",\n\t\"lb\": \"pound\",\n\t\"lbs\": \"pound\",\n\t\"m\": \"meter\",\n\t\"mm\": \"millimeter\",\n\t\"mms\": \"millimeter\",\n\t\"cm\": \"centimeter\",\n\t\"cms\": \"centimeter\",\n\t\"km\": \"kilometer\",\n\t\"kms\": \"kilometer\",\n\t\"l\": \"liter\",\n\t\"ls\": \"liter\",\n\t\"ml\": \"milliliter\",\n\t\"mls\": \"milliliter\",\n\t\"tsp\": \"teaspoon\",\n\t\"tsps\": \"teaspoon\",\n\t\"tbsp\": \"tablespoon\",\n\t\"tbsps\": \"tablespoon\",\n\t\"floz\": \"fluid ounce\",\n\t\"flozs\": \"fluid ounce\",\n\t\"€\": \"EUR\",\n\t\"£\": \"GBP\",\n\t\"$\": \"USD\",\n\t\"kb\": \"kilobyte\",\n\t\"kbs\": \"kilobyte\",\n\t\"mb\": \"megabyte\",\n\t\"mbs\": \"megabyte\",\n\t\"gb\": \"gigabyte\",\n\t\"gbs\": \"gigabyte\",\n\t\"tb\": \"terabyte\",\n\t\"tbs\": \"terabyte\",\n\t\"pb\": \"petabyte\",\n\t\"pbs\": \"petabyte\",\n\t\"kib\": \"kibibyte\",\n\t\"kibs\": \"kibibyte\",\n\t\"mib\": \"mebibyte\",\n\t\"mibs\": \"mebibyte\",\n\t\"gib\": \"gibibyte\",\n\t\"gibs\": \"gibibyte\",\n\t\"tib\": \"tebibyte\",\n\t\"tibs\": \"tebibyte\",\n\t\"pib\": \"pebibyte\",\n\t\"pibs\": \"pebibyte\",\n\t\"j\": \"Joule\",\n\t\"js\": \"Joule\",\n\t\"cal\": \"Calorie\",\n\t\"cals\": \"Calorie\",\n\t\"ev\": \"electron volt\",\n\t\"evs\": \"electron volt\",\n\t\"deg\": \"degree\",\n\t\"degs\": \"degree\",\n\t\"rad\": \"radian\",\n\t\"rads\": \"radian\",\n\t\"%\": \"percent\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./data/en/abbreviations.json\n ** module id = 14\n ** module chunks = 0\n **/","// @flow\nimport { flow, drop, map, reduce, assign, join } from 'lodash/fp';\nimport type { TokenBase, TokenizerSpecEntries } from '../../modules/tokenizer/types';\nimport type { DateTime } from '../../modules/math/types';\nimport {\n  TOKEN_OPERATOR_ADD,\n  TOKEN_NUMBER,\n  TOKEN_UNIT_NAME,\n  TOKEN_BRACKET_OPEN,\n  TOKEN_BRACKET_CLOSE,\n  TOKEN_DATE_TIME,\n} from '../../tokenTypes';\nimport { propagateNull } from '../../util';\n\n\nconst numberUnlessEmptyString = value => (value === '' ? null : Number(value));\n\nconst time = {\n  match: '([0-2]?\\\\d)(:[0-5]\\\\d|)(:[0-5]\\\\d|)(\\\\s*am|\\\\s*pm|)',\n  matchCount: 4,\n  transform: (hour, minute, second, amPm) => (\n    (minute === '' && amPm === '')\n      ? null\n      : {\n        hour: Number(hour) + (amPm.toLowerCase() === 'pm' ? 12 : 0),\n        minute: numberUnlessEmptyString(minute.substring(1)),\n        second: numberUnlessEmptyString(second.substring(1)),\n      }\n  ),\n};\n\nconst date = {\n  match: '([1-9]|[0-3][0-9])(?:\\\\s*(?:st|nd|rd|th))?',\n  transform: value => ({\n    date: Number(value),\n  }),\n};\n\nconst monthPrefixes =\n  ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n\nconst monthName = {\n  match: `(${[\n    'jan(?:uary)?',\n    'feb(?:ruary)?',\n    'mar(?:ch)?',\n    'apr(?:il)?',\n    'may',\n    'june?',\n    'july?',\n    'aug(?:ust)?',\n    'sep(?:t(?:ember)?)?',\n    'oct(?:ober)?',\n    'nov(?:ember)?',\n    'dec(?:ember)?',\n  ].join('|')})`,\n  transform: match => ({\n    month: monthPrefixes.indexOf(match.substring(0, 3).toLowerCase()) + 1,\n  }),\n};\n\nconst year = {\n  match: '([1-9]\\\\d{1,3})',\n  transform: year => ({\n    year: Number(year),\n  }),\n};\n\n\nconst defaultValue: DateTime = {\n  year: null,\n  month: null,\n  date: null,\n  hour: null,\n  minute: null,\n  second: null,\n  timezone: null,\n};\n\nconst createRegExp = flow(\n  map('match'),\n  map(match => `\\\\b${match}\\\\b`),\n  join('\\\\s*'),\n  string => new RegExp(string, 'i'),\n);\n\nconst createTransformer = transformers => (match, matches): ?TokenBase => {\n  const valueMatches = reduce(propagateNull((accum, transformer) => {\n    const arity = transformer.matchCount || 1;\n    const args = accum.remainingMatches.slice(0, arity);\n    const remainingMatches = accum.remainingMatches.slice(arity);\n\n    const newValue = transformer.transform(...args, accum.value);\n    if (!newValue) return null;\n    const value = assign(accum.value, newValue);\n\n    return { value, remainingMatches };\n  }), {\n    value: defaultValue,\n    remainingMatches: drop(1, matches),\n  }, transformers);\n\n  if (!valueMatches) return null;\n  const { value } = valueMatches;\n\n  return { type: TOKEN_DATE_TIME, value: { value, directionHint: 1 } };\n};\n\nconst createDateMatcher = (transformers, penalty) => ({\n  match: createRegExp(transformers),\n  token: createTransformer(transformers),\n  penalty,\n});\n\nconst createRelativeDate = (count, unit) => [\n  { type: TOKEN_BRACKET_OPEN },\n  { type: TOKEN_DATE_TIME, value: { value: defaultValue, directionHint: 1 } },\n  { type: TOKEN_OPERATOR_ADD },\n  { type: TOKEN_NUMBER, value: count },\n  { type: TOKEN_UNIT_NAME, value: unit },\n  { type: TOKEN_BRACKET_CLOSE },\n];\n\n\n/* eslint-disable max-len */\nconst dateSpec: TokenizerSpecEntries = [\n  createDateMatcher([date, monthName, year], -50000),\n  createDateMatcher([monthName, date, year], -50000),\n  createDateMatcher([date, monthName], -30000),\n  createDateMatcher([monthName, date], -30000),\n  createDateMatcher([time, date, monthName, year], -70000),\n  createDateMatcher([time, monthName, date, year], -70000),\n  createDateMatcher([time, date, monthName], -50000),\n  createDateMatcher([time, monthName, date], -50000),\n  createDateMatcher([time, date], -30000),\n  createDateMatcher([date, time], -30000),\n  createDateMatcher([time], -20000),\n  {\n    match: /\\bnow|today\\b/i,\n    token: { type: TOKEN_DATE_TIME, value: { value: defaultValue, directionHint: 1 } },\n    penalty: -500,\n  },\n  {\n    match: /\\byesterday\\b/i,\n    token: () => createRelativeDate(-1, 'day'),\n    tokenIndices: [2],\n    penalty: -500,\n  },\n  {\n    match: /\\btomorrow\\b/i,\n    token: () => createRelativeDate(1, 'day'),\n    tokenIndices: [2],\n    penalty: -500,\n  },\n  {\n    match: /\\bago\\b/i,\n    token: { type: TOKEN_DATE_TIME, value: { value: defaultValue, directionHint: -1 } },\n    penalty: -500,\n  },\n  {\n    match: /\\b(next|last)\\s+(week|month|year|century|millenium)\\b/i,\n    token: (match, matches) => createRelativeDate(\n      matches[1].toLowerCase() === 'next' ? 1 : -1,\n      matches[2].toLowerCase()\n    ),\n    tokenIndices: [2, 5],\n    penalty: -500,\n  },\n];\n/* eslint-enable */\n\nexport default dateSpec;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tokenizerLocales/en/date.js\n **/","// @flow\nimport { curry, flatten, isArray } from 'lodash/fp';\nimport type { Curry2 } from './utilTypes';\n\ntype EveryOtherForm<T> = (startIndex: number) => (array: T[]) => T[];\ntype PropagateNull<S, T> = (cb: (accum: T, value: S) => ?(T)) => (accum: T, value: S) => ?(T);\ntype MapUnlessNull<T> = (cb: (value: any) => ?T, array: any[]) => ?(T[]);\ntype FlatZip<T> = Curry2<T[], T[], T[]>;\ntype UncastArray<T> = (value: T | T[]) => ?T;\n\nconst everyOtherFrom: EveryOtherForm<any> = startIndex => array => {\n  const accum = [];\n  for (let i = startIndex; i < array.length; i += 2) {\n    accum.push(array[i]);\n  }\n  return accum;\n};\nexport const evenIndexElements = everyOtherFrom(0);\nexport const oddIndexElements = everyOtherFrom(1);\n\nexport const propagateNull: PropagateNull<any, any> = cb =>\n  (accum, value) => ((accum === null) ? null : cb(accum, value));\n\nexport const mapUnlessNull: MapUnlessNull<any> = (cb, array) => {\n  const accum = [];\n  for (let i = 0; i < array.length; i += 1) {\n    const value = cb(array[i]);\n    if (value === null) return null;\n    accum[i] = value;\n  }\n  return accum;\n};\n\nexport const flatZip: FlatZip<any> = curry((array1, array2) => {\n  let accum = [];\n  const to = Math.min(array1.length, array2.length);\n\n  for (let i = 0; i < to; i += 1) {\n    accum = accum.concat(array1[i], array2[i]);\n  }\n\n  if (to < array1.length) {\n    accum = accum.concat(flatten(array1.slice(to)));\n  } else if (to < array2.length) {\n    accum = accum.concat(flatten(array2.slice(to)));\n  }\n\n  return accum;\n});\n\nexport const uncastArray: UncastArray<any> = value => {\n  if (!isArray(value) || value.length > 1) {\n    return value;\n  } else if (value.length === 1) {\n    return value[0];\n  }\n  return null;\n};\n\nexport const singleArrayValue: UncastArray<any> = value => {\n  if (!isArray(value)) {\n    return value;\n  } else if (value.length === 1) {\n    return value[0];\n  }\n  return null;\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.js\n **/","// @flow\nimport {\n  TOKEN_OPERATOR_EXPONENT,\n  TOKEN_OPERATOR_MULTIPLY,\n  TOKEN_OPERATOR_DIVIDE,\n  TOKEN_OPERATOR_ADD,\n  TOKEN_OPERATOR_SUBTRACT,\n  TOKEN_OPERATOR_NEGATE,\n  TOKEN_OPERATOR_FACTORIAL,\n} from './tokenTypes';\nimport createTransformer from './modules/transformer';\nimport assignmentTransform from './transformers/assignmentTransform';\nimport bracketTransform from './transformers/bracketTransform';\nimport commaTransform from './transformers/commaTransform';\nimport {\n  createForwardOperatorTransform, createBackwardOperatorTransform,\n} from './transformers/createOperatorTransform';\nimport functionShorthandTransform from './transformers/functionShorthandTransform';\nimport conversionTransform from './transformers/conversionTransform';\nimport percentTransform from './transformers/percentTransform';\nimport entityTransform from './transformers/entityTransform';\nimport remainingTokensTransform from './transformers/remainingTokensTransform';\nimport miscGroupTransform from './transformers/miscGroupTransform';\n\nexport default createTransformer([\n  assignmentTransform,\n  conversionTransform,\n  bracketTransform,\n  commaTransform,\n  createForwardOperatorTransform([TOKEN_OPERATOR_ADD, TOKEN_OPERATOR_SUBTRACT]),\n  createForwardOperatorTransform([TOKEN_OPERATOR_MULTIPLY, TOKEN_OPERATOR_DIVIDE]),\n  functionShorthandTransform,\n  createBackwardOperatorTransform([TOKEN_OPERATOR_EXPONENT, TOKEN_OPERATOR_NEGATE]),\n  createForwardOperatorTransform([TOKEN_OPERATOR_FACTORIAL]),\n  remainingTokensTransform,\n  percentTransform,\n  entityTransform,\n  miscGroupTransform,\n]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformer.js\n **/","// @flow\nimport type { TokenNode, Transformer, TransformResult } from './types';\nimport { mapUnlessNull } from '../../util';\n\n/*\n# Transformers\n\nA transformer has the properties pattern and transform.\n\nThe pattern can be a PatternMatcher instance or anything that generates capture groups.\n\nThe transform property is a function that takes the capture groups matched, and a recurse function\nto recursively parse a set of the capture groups; and returns a transformed capture group. TL;DR,\n\n```js\nconst transform = (captureGroups, recurse) => recurse([\n  captureGroups[0],\n  captureGroups[2],\n], ([transformedLhs, transformedRhs]) => {\n  // transformed{Lhs,Rhs} are not null\n  return createFunction(operator, transformedLhs, transformedRhs);\n});\n```\n\nIf you return an array from the transform function, it will continue trying to apply transform\nrules. If you return an object, it will make that the return value and stop transforming. If you\nreturn null, it will return null and stop transforming.\n\nThe recurse function takes an array of array of tokens (aka, capture groups), and a callback that\nis invoked with the transformed capture groups. If one of the things you tried to transform\nrecursively returns null, the callback is not invoked: you can be certain that the capture groups\nthe callback was invoked with are actual results.\n\nSay for example, you match a some tokens, an operator (like +), and then some more tokens. You'd\nneed the left and right hand sides to be transformed to create the function, so you call the\nrecurse function on these.\n\n# Algorithm\n\nWe take an array of transformers and input tokens. We start from the first transformer, and if we\ncreate a match, we do the transform, and attempt to match the same case. Only when we do not match\na case do we continue on to the next.\n*/\nexport default (transforms: Transformer[]) => {\n  const iter = (tokens: TransformResult, location = 0): ?TransformResult => {\n    if (!Array.isArray(tokens)) return tokens;\n\n    const transform = transforms[location];\n    const captureGroups = transform.pattern.match(tokens);\n\n    if (captureGroups) {\n      const transformResult = transform.transform(captureGroups, (captureGroupsToTransform, cb) => {\n        const transformedCaptureGroups = mapUnlessNull(captureGroupToTransform => (\n          iter(captureGroupToTransform, location)\n        ), captureGroupsToTransform);\n\n        return transformedCaptureGroups\n          ? cb(transformedCaptureGroups)\n          : null;\n      });\n\n      return transformResult\n        ? iter(transformResult, location)\n        : null;\n    } else if (location < transforms.length - 1) {\n      return iter(tokens, location + 1);\n    }\n    return tokens;\n  };\n\n  return (tokens: TokenNode[]): ?TokenNode => {\n    const result = iter(tokens, 0);\n    return !Array.isArray(result) ? result : null;\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/transformer/index.js\n **/","// @flow\nimport {\n  Pattern, CaptureWildcard, CaptureElement,\n} from '../modules/patternMatcher';\nimport type { Transformer } from '../modules/transformer/types';\nimport { TOKEN_ASSIGNMENT } from '../tokenTypes';\nimport { baseAssignment } from '../modules/math/types';\n\nconst bracketTransform: Transformer = {\n  pattern: new Pattern([\n    new CaptureElement(TOKEN_ASSIGNMENT),\n    new CaptureWildcard().any().lazy(),\n  ]),\n  transform: (captureGroups, transform) => transform([captureGroups[1]], ([value]) => ({\n    ...baseAssignment, identifier: captureGroups[0][0].value, value,\n  })),\n};\nexport default bracketTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/assignmentTransform.js\n **/","// @flow\n/* globals Generator */\nimport { set, map, includes } from 'lodash/fp';\n\ntype CaptureRange = [number, number];\ntype MatchStack = { index: number, captureRanges: CaptureRange[], array: string[] }\n\nclass BaseMatcher {\n  pattern: any = null;\n  isNegative = false;\n  isLazy = false;\n  start = 1;\n  end = 1;\n\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n\n  from(start) {\n    return set('start', start, this);\n  }\n\n  to(end) {\n    return set('end', end, this);\n  }\n\n  zeroOrOne() {\n    return this.from(0).to(1);\n  }\n\n  any() {\n    return this.from(0).to(Infinity);\n  }\n\n  oneOrMore() {\n    return this.from(1).to(Infinity);\n  }\n\n  negate() {\n    return set('isNegative', true, this);\n  }\n\n  lazy() {\n    return set('isLazy', true, this);\n  }\n\n  match(tokens) {\n    const types = map('type', tokens);\n\n    const matchStack = { index: 0, captureRanges: [], array: types };\n    const minIndex = tokens.length;\n    for (const result of this.getMatches(matchStack)) {\n      if (result.index >= minIndex) {\n        const capturedTokens = map(captureRange => (\n          tokens.slice(captureRange[0], captureRange[1])\n        ), result.captureRanges);\n\n        return capturedTokens;\n      }\n    }\n    return null;\n  }\n\n  * getMatches(matchStack: MatchStack) { // eslint-disable-line\n    throw new Error('Not implemented');\n  }\n}\n\nclass BaseCaptureMatcher extends BaseMatcher {\n  conforms(element: string, pattern: any) { // eslint-disable-line\n    throw new Error('Not implemented');\n  }\n\n  * getLazyMatchesFrom(\n    startI: number,\n    end: number,\n    lastElementIndex: number,\n    { index, captureRanges, array }: MatchStack\n  ) {\n    const { pattern, isNegative } = this;\n\n    for (let i = startI; i <= end; i += 1) {\n      if (i === lastElementIndex || this.conforms(array[i], pattern) === isNegative) {\n        yield {\n          index: index + i,\n          captureRanges: captureRanges.concat([[index, index + i]]),\n          array: array.slice(i),\n        };\n        return;\n      }\n    }\n  }\n\n  * getNonLazyMatchesFrom(\n    startI: number,\n    end: number,\n    lastElementIndex: number,\n    { index, captureRanges, array }: MatchStack\n  ) {\n    const { pattern, isNegative } = this;\n\n    for (let i = startI; i <= end; i += 1) {\n      yield {\n        index: index + i,\n        captureRanges: captureRanges.concat([[index, index + i]]),\n        array: array.slice(i),\n      };\n      if (i !== lastElementIndex && (this.conforms(array[i], pattern) === isNegative)) return;\n    }\n  }\n\n  * getMatches(matchStack: MatchStack) {\n    // const { index, captureRanges, array } = matchStack;\n    const { array } = matchStack;\n    const { pattern, isNegative, isLazy, start } = this;\n\n    if (start > array.length) return;\n\n    let i = 0;\n\n    for (; i < start; i += 1) {\n      if (this.conforms(array[i], pattern) === isNegative) return;\n    }\n\n    // if (i === this.end) {\n    //   yield {\n    //     index: index + i,\n    //     captureRanges: captureRanges.concat([[index, index + i]]),\n    //     array: array.slice(i),\n    //   };\n    //   return;\n    // }\n\n    const lastElementIndex = array.length;\n    const end = Math.min(this.end, lastElementIndex);\n    if (isLazy) {\n      yield* this.getLazyMatchesFrom(i, end, lastElementIndex, matchStack);\n    } else {\n      yield* this.getNonLazyMatchesFrom(i, end, lastElementIndex, matchStack);\n    }\n  }\n}\n\nexport class CaptureElement extends BaseCaptureMatcher {\n  conforms(element: string, pattern: any) {\n    return element === pattern;\n  }\n}\n\nexport class CaptureOptions extends BaseCaptureMatcher {\n  conforms(element: string, pattern: any) {\n    return includes(element, pattern);\n  }\n}\n\nexport class CaptureWildcard extends BaseCaptureMatcher {\n  conforms() {\n    return true;\n  }\n}\n\nexport class Pattern extends BaseMatcher {\n  * getSubmatches(\n    iteration: number,\n    remainingPatterns: any[],\n    matchStack: MatchStack\n  ): Generator<MatchStack, void, void> {\n    const numRemainingPatterns = remainingPatterns.length;\n\n    if (numRemainingPatterns === 0) {\n      if (iteration >= this.start) {\n        // Completed an iteration and we completed the minimum number of iterations\n        yield matchStack;\n      }\n\n      if (iteration < this.end - 1) {\n        yield* this.getSubmatches(iteration + 1, this.pattern, matchStack);\n      }\n    } else if (numRemainingPatterns > 0) {\n      const remainingPattern = remainingPatterns[0];\n      const isFirstPattern = numRemainingPatterns === this.pattern.length;\n      const isLastPattern = numRemainingPatterns === 1;\n      let didMatchSubCase = false;\n\n      for (const match of remainingPattern.getMatches(matchStack)) {\n        didMatchSubCase = true;\n\n        if (isLastPattern && match.array.length === 0) {\n          yield match;\n        } else {\n          yield* this.getSubmatches(iteration, remainingPatterns.slice(1), match);\n        }\n      }\n\n      const matchedNothing = !didMatchSubCase && isFirstPattern;\n\n      if (matchedNothing && iteration === 0 && this.start === 0) {\n        // Pattern matched nothing and that is permitted (new Pattern().any())\n        // Should this match? Pattern itself is not a capture group\n        yield matchStack;\n      }\n    }\n  }\n\n  * getMatches(matchStack: MatchStack): Generator<MatchStack, void, void> {\n    yield* this.getSubmatches(0, this.pattern, matchStack);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/patternMatcher.js\n **/","// @flow\nimport { first, last } from 'lodash/fp';\nimport {\n  Pattern, CaptureWildcard, CaptureElement, CaptureOptions,\n} from '../modules/patternMatcher';\nimport type { Transformer } from '../modules/transformer/types';\nimport { TOKEN_FUNCTION, TOKEN_BRACKET_OPEN, TOKEN_BRACKET_CLOSE } from '../tokenTypes';\nimport { NODE_ARRAY_GROUP, baseBrackets, baseFunction } from '../modules/math/types';\nimport { uncastArray } from '../util';\n\nconst bracketTransform: Transformer = {\n  pattern: new Pattern([\n    new CaptureWildcard().any(),\n    new CaptureElement(TOKEN_FUNCTION).zeroOrOne(),\n    new CaptureElement(TOKEN_BRACKET_OPEN),\n    new CaptureOptions([TOKEN_BRACKET_OPEN, TOKEN_BRACKET_CLOSE]).negate().lazy().any(),\n    new CaptureElement(TOKEN_BRACKET_CLOSE),\n    new CaptureWildcard().any().lazy(),\n  ]),\n  transform: (captureGroups, transform) => transform([captureGroups[3]], ([bracketGroup]) => {\n    if (Array.isArray(bracketGroup)) return null;\n\n    const fn = first(captureGroups[1]);\n\n    let value;\n    if (!fn) {\n      value = { ...baseBrackets, value: bracketGroup };\n    } else if (bracketGroup.type === NODE_ARRAY_GROUP) {\n      value = { ...baseFunction, name: fn.value, args: bracketGroup.value };\n    } else {\n      value = { ...baseFunction, name: fn.value, args: [bracketGroup] };\n    }\n\n    const concatSegments = [].concat(\n      first(captureGroups),\n      value,\n      last(captureGroups)\n    );\n    return uncastArray(concatSegments);\n  }),\n};\nexport default bracketTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/bracketTransform.js\n **/","// @flow\nimport { Pattern, CaptureElement } from '../modules/patternMatcher';\nimport type { Transformer } from '../modules/transformer/types';\nimport { baseArrayGroup } from '../modules/math/types';\nimport type { PercentageNode } from '../modules/math/types'; // eslint-disable-line\nimport { TOKEN_COMMA } from '../tokenTypes';\nimport { evenIndexElements } from '../util';\n\n\nconst entityTransform: Transformer = {\n  // TODO: Could be made more efficient\n  pattern: new Pattern([\n    new CaptureElement(TOKEN_COMMA).negate().lazy().any(),\n    new Pattern([\n      new CaptureElement(TOKEN_COMMA),\n      new CaptureElement(TOKEN_COMMA).negate().lazy().any(),\n    ]).oneOrMore(),\n  ]),\n  transform: (captureGroups, transform) => transform(evenIndexElements(captureGroups), segments => (\n    { ...baseArrayGroup, value: segments }\n  )),\n};\nexport default entityTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/commaTransform.js\n **/","// @flow\nimport {\n  first, last, reduce, zip, flow, map, isEmpty, dropRight, reduceRight, compact,\n} from 'lodash/fp';\nimport { Pattern, CaptureOptions } from '../modules/patternMatcher';\nimport type { Transformer } from '../modules/transformer/types';\nimport {\n  TOKEN_OPERATOR_EXPONENT,\n  TOKEN_OPERATOR_MULTIPLY,\n  TOKEN_OPERATOR_DIVIDE,\n  TOKEN_OPERATOR_ADD,\n  TOKEN_OPERATOR_SUBTRACT,\n  TOKEN_OPERATOR_NEGATE,\n  TOKEN_OPERATOR_FACTORIAL,\n} from '../tokenTypes';\nimport { NODE_MISC_GROUP, baseMiscGroup, baseFunction } from '../modules/math/types';\nimport type { Node, FunctionNode } from '../modules/math/types'; // eslint-disable-line\nimport {\n  FUNCTION_ADD,\n  FUNCTION_SUBTRACT,\n  FUNCTION_MULTIPLY,\n  FUNCTION_DIVIDE,\n  FUNCTION_EXPONENT,\n  FUNCTION_NEGATE,\n  FUNCTION_FACTORIAL,\n} from '../modules/math/functions';\nimport { propagateNull, evenIndexElements, oddIndexElements, singleArrayValue } from '../util';\nimport { compactMiscGroup } from './util';\n\ntype Direction = number;\nconst FORWARD: Direction = 0;\nconst BACKWARD: Direction = 1;\n\nconst operatorTypes = {\n  [TOKEN_OPERATOR_ADD]: FUNCTION_ADD,\n  [TOKEN_OPERATOR_SUBTRACT]: FUNCTION_SUBTRACT,\n  [TOKEN_OPERATOR_MULTIPLY]: FUNCTION_MULTIPLY,\n  [TOKEN_OPERATOR_DIVIDE]: FUNCTION_DIVIDE,\n  [TOKEN_OPERATOR_EXPONENT]: FUNCTION_EXPONENT,\n  [TOKEN_OPERATOR_NEGATE]: FUNCTION_NEGATE,\n  [TOKEN_OPERATOR_FACTORIAL]: FUNCTION_FACTORIAL,\n};\n\nconst operatorArity = {\n  [FUNCTION_ADD]: 2,\n  [FUNCTION_SUBTRACT]: 2,\n  [FUNCTION_MULTIPLY]: 2,\n  [FUNCTION_DIVIDE]: 2,\n  [FUNCTION_EXPONENT]: 2,\n  [FUNCTION_NEGATE]: 1,\n  [FUNCTION_FACTORIAL]: 1,\n};\n\nconst unaryBindingDirections = {\n  [FUNCTION_NEGATE]: FORWARD,\n  [FUNCTION_FACTORIAL]: BACKWARD,\n};\n\n\nconst getOperatorTypes = flow(\n  oddIndexElements,\n  map(first),\n  map('type'),\n);\n\nconst createBilinearNode = (name, leftSegment, rightSegment): ?FunctionNode => {\n  const lhs = singleArrayValue(leftSegment);\n  const rhs = singleArrayValue(rightSegment);\n\n  return (lhs && rhs)\n    ? { ...baseFunction, name, args: [lhs, rhs] }\n    : null;\n};\n\nconst createUnaryNode = (bindingDirection, name, leftSegment, rightSegment): ?FunctionNode => {\n  let leftSide = !isEmpty(leftSegment) ? leftSegment : null;\n  let rightSide = !isEmpty(rightSegment) ? rightSegment : null;\n  let argument;\n\n  if (bindingDirection === FORWARD && rightSide && rightSide.type === NODE_MISC_GROUP) {\n    argument = first(rightSide.value);\n    const miscGroup: Node = { ...baseMiscGroup, value: rightSide.value.slice(1) };\n    rightSide = compactMiscGroup(miscGroup);\n  } else if (bindingDirection === FORWARD) {\n    argument = rightSide;\n    rightSide = null;\n  } else if (bindingDirection === BACKWARD && leftSide && leftSide.type === NODE_MISC_GROUP) {\n    argument = last(leftSide.value);\n    const miscGroup: Node = { ...baseMiscGroup, value: leftSide.value.slice(1) };\n    leftSide = compactMiscGroup(miscGroup);\n  } else if (bindingDirection === BACKWARD) {\n    argument = leftSide;\n    leftSide = null;\n  }\n\n  if (!argument) return null;\n\n  const node = { ...baseFunction, name, args: [argument] };\n  const group = compact([leftSide, node, rightSide]);\n  const miscGroup: Node = { ...baseMiscGroup, value: group };\n  const value = compactMiscGroup(miscGroup);\n\n  return value;\n};\n\nconst createNode = (operatorType, leftSegment, rightSegment) => {\n  const name = operatorTypes[operatorType];\n  const arity = operatorArity[name];\n\n  if (arity === 2) {\n    return createBilinearNode(name, leftSegment, rightSegment);\n  }\n  const bindingDirection = unaryBindingDirections[name];\n  return createUnaryNode(bindingDirection, name, leftSegment, rightSegment);\n};\n\nconst createPattern = (operators: string[]) => (\n  new Pattern([\n    new CaptureOptions(operators).negate().lazy().any(),\n    new Pattern([\n      new CaptureOptions(operators),\n      new CaptureOptions(operators).negate().lazy().any(),\n    ]).oneOrMore(),\n  ])\n);\n\nexport const createForwardOperatorTransform = (operators: string[]): Transformer => ({\n  pattern: createPattern(operators),\n  transform: (captureGroups, transform) => transform(evenIndexElements(captureGroups), segments => {\n    const operatorTypes = getOperatorTypes(captureGroups);\n    const [initialSegment, ...remainingSegments] = segments;\n\n    return reduce(propagateNull((lhs, [operator, rhs]) => (\n      createNode(operator, lhs, rhs)\n    )), initialSegment, zip(operatorTypes, remainingSegments));\n  }),\n});\n\nexport const createBackwardOperatorTransform = (operators: string[]): Transformer => ({\n  pattern: createPattern(operators),\n  transform: (captureGroups, transform) => transform(evenIndexElements(captureGroups), segments => {\n    const operatorTypes = getOperatorTypes(captureGroups);\n    const initialSegment = last(segments);\n    const remainingSegments = dropRight(1, segments);\n\n    return reduceRight(propagateNull((lhs, [operator, rhs]) => (\n      createNode(operator, rhs, lhs)\n    )), initialSegment, zip(operatorTypes, remainingSegments));\n  }),\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/createOperatorTransform.js\n **/","// @flow\nimport { first, last, reduce, map, reduceRight, update, multiply, get } from 'lodash/fp';\nimport { NODE_MISC_GROUP } from '../modules/math/types';\nimport type { EntityNode, Node, MiscGroupNode } from '../modules/math/types'; // eslint-disable-line\nimport type { TokenNode } from '../modules/transformer/types';\nimport { TOKEN_UNIT_NAME, TOKEN_UNIT_PREFIX, TOKEN_UNIT_SUFFIX } from '../tokenTypes';\nimport { propagateNull } from '../util';\n\nexport const INTERMEDIATE_UNIT = 'INTERMEDIATE_UNIT';\n\nexport const combineUnitNamesPrefixesSuffixes = (segment: TokenNode[]): ?(EntityNode[]) => {\n  let segmentWithIntermediateUnits = map(tag => (\n    tag.type === TOKEN_UNIT_NAME\n      ? ({ type: INTERMEDIATE_UNIT, name: tag.value, power: 1 })\n      : tag\n  ), segment);\n\n  // Combine unit suffixes with intermediate unit powers\n  segmentWithIntermediateUnits = reduce(propagateNull((accum, tag) => {\n    if (tag.type !== TOKEN_UNIT_SUFFIX) {\n      return [...accum, tag];\n    } else if (get('type', last(accum)) === INTERMEDIATE_UNIT) {\n      return update([accum.length - 1, 'power'], multiply(tag.value), accum);\n    }\n    return null;\n  }), [], segmentWithIntermediateUnits);\n\n  // Combine unit prefixes with intermediate unit powers\n  segmentWithIntermediateUnits = reduceRight(propagateNull((accum, tag) => {\n    if (tag.type !== TOKEN_UNIT_PREFIX) {\n      return [tag, ...accum];\n    } else if (get('type', first(accum)) === INTERMEDIATE_UNIT) {\n      return update([0, 'power'], multiply(tag.value), accum);\n    }\n    return null;\n  }), [], segmentWithIntermediateUnits);\n\n  return segmentWithIntermediateUnits;\n};\n\nexport const compactMiscGroup = (node: TokenNode): ?Node => {\n  if (node.type !== NODE_MISC_GROUP || !node.value) return node;\n\n  const value: MiscGroupNode[] = node.value;\n  if (value.length > 1) {\n    return node;\n  } else if (value.length === 1) {\n    return value[0];\n  }\n  return null;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/util.js\n **/","// @flow\nimport { first, isEmpty } from 'lodash/fp';\nimport {\n  Pattern, CaptureWildcard, CaptureElement,\n} from '../modules/patternMatcher';\nimport type { Transformer } from '../modules/transformer/types';\nimport { TOKEN_FUNCTION } from '../tokenTypes';\nimport { baseFunction } from '../modules/math/types';\nimport { uncastArray } from '../util';\n\nconst bracketTransform: Transformer = {\n  pattern: new Pattern([\n    new CaptureWildcard().any(),\n    new CaptureElement(TOKEN_FUNCTION),\n    new CaptureWildcard().any().lazy(),\n  ]),\n  transform: (captureGroups, transform) => transform([captureGroups[2]], ([arg]) => {\n    if (isEmpty(arg)) return null;\n\n    const fn = first(captureGroups[1]);\n\n    const concatSegments = [].concat(\n      first(captureGroups),\n      { ...baseFunction, name: fn.value, args: [arg] }\n    );\n    return uncastArray(concatSegments);\n  }),\n};\nexport default bracketTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/functionShorthandTransform.js\n **/","// @flow\nimport {\n  __, flow, take, takeRight, takeWhile, takeRightWhile, drop, dropRight, dropWhile, dropRightWhile,\n  isEmpty, map, includes, last, filter, reduce, set, getOr,\n} from 'lodash/fp';\nimport type { Transformer } from '../modules/transformer/types';\nimport {\n  TOKEN_FORMATTING_HINT, TOKEN_NOOP, TOKEN_NUMBER, TOKEN_PSEUDO_UNIT, TOKEN_UNIT_NAME,\n  TOKEN_UNIT_PREFIX, TOKEN_UNIT_SUFFIX,\n} from '../tokenTypes';\nimport { baseConversion } from '../modules/math/types';\nimport { INTERMEDIATE_UNIT, combineUnitNamesPrefixesSuffixes } from './util';\n\nconst conversionTokens = [\n  TOKEN_FORMATTING_HINT,\n  TOKEN_NOOP,\n  TOKEN_PSEUDO_UNIT,\n  TOKEN_UNIT_NAME,\n  TOKEN_UNIT_PREFIX,\n  TOKEN_UNIT_SUFFIX,\n];\nconst unitTokens = [\n  TOKEN_UNIT_NAME,\n  TOKEN_UNIT_PREFIX,\n  TOKEN_UNIT_SUFFIX,\n];\nconst isNoop = type => type === TOKEN_NOOP;\nconst notNoop = type => type !== TOKEN_NOOP;\nconst isConversionToken = includes(__, conversionTokens);\n\nconst findLeftConversion = tags => {\n  const tagTypes = map('type', tags);\n\n  const conversionTagTypes = flow(\n    takeWhile(isConversionToken),\n    dropRightWhile(notNoop),\n    dropWhile(isNoop)\n  )(tagTypes);\n\n  if (isEmpty(conversionTagTypes) || last(conversionTagTypes) !== TOKEN_NOOP) return null;\n\n  const index = conversionTagTypes.length;\n  const conversionTags = take(index, tags);\n  const remainingTags = drop(index, tags);\n  return [remainingTags, conversionTags];\n};\n\nconst findRightConversion = tags => {\n  const tagTypes = map('type', tags);\n\n  let conversionTagTypes = takeRightWhile(isConversionToken, tagTypes);\n\n  const precedingTag = tags[tags.length - conversionTagTypes.length - 1];\n\n  if (precedingTag && (precedingTag.type === TOKEN_NUMBER)) {\n    // Gathered too many tags and went into tags that would form an entity, drop some tags\n    conversionTagTypes = dropWhile(notNoop, conversionTagTypes);\n  }\n\n  if (isEmpty(conversionTagTypes)) return null;\n\n  const index = conversionTagTypes.length;\n  const conversionTags = takeRight(index, tags);\n  const remainingTags = dropRight(index, tags);\n  return [remainingTags, conversionTags];\n};\n\nconst findConversion = tags => findLeftConversion(tags) || findRightConversion(tags);\n\n\nconst conversionsTransform: Transformer = {\n  pattern: { match: findConversion },\n  transform: (captureGroups, transform) => transform([captureGroups[0]], ([value]) => {\n    const conversionSegment = captureGroups[1];\n\n    const pseudoConversions = filter({ type: TOKEN_PSEUDO_UNIT }, conversionSegment);\n    if (pseudoConversions.length > 1) return null;\n\n    const unitSegmentWithIntermediateUnits = flow(\n      filter(token => includes(token.type, unitTokens)),\n      combineUnitNamesPrefixesSuffixes\n    )(conversionSegment);\n    if (!unitSegmentWithIntermediateUnits) return null;\n\n    const entityConversion = flow(\n      filter({ type: INTERMEDIATE_UNIT }),\n      map(unit => ({ [unit.name]: unit.power }))\n    )(unitSegmentWithIntermediateUnits);\n\n    const pseudoConversion = getOr(null, [0, 'value'], pseudoConversions);\n\n    const formatting = flow(\n      filter({ type: TOKEN_FORMATTING_HINT }),\n      map('value'),\n      reduce((accum, { key, value }) => set(key, value, accum), {})\n    )(conversionSegment);\n\n    return { ...baseConversion, value, entityConversion, pseudoConversion, formatting };\n  }),\n};\nexport default conversionsTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/conversionTransform.js\n **/","// @flow\nimport { first, last } from 'lodash/fp';\nimport { Pattern, CaptureElement, CaptureWildcard } from '../modules/patternMatcher';\nimport type { Transformer } from '../modules/transformer/types';\nimport { basePercentage } from '../modules/math/types';\nimport type { PercentageNode } from '../modules/math/types'; // eslint-disable-line\nimport { TOKEN_NUMBER, TOKEN_PERCENTAGE } from '../tokenTypes';\nimport { uncastArray } from '../util';\n\n\nconst entityTransform: Transformer = {\n  // TODO: Could be made more efficient\n  pattern: new Pattern([\n    new CaptureElement(TOKEN_NUMBER).negate().lazy().any(),\n    new Pattern([\n      new CaptureElement(TOKEN_NUMBER),\n      new CaptureElement(TOKEN_PERCENTAGE),\n      new CaptureWildcard().lazy().any(),\n    ]),\n  ]),\n  transform: (captureGroups, transform) => transform([\n    captureGroups[0],\n    captureGroups[3],\n  ], segments => {\n    const value: number = captureGroups[1][0].value;\n    const percentage: PercentageNode = { ...basePercentage, value };\n\n    const concatSegments = [].concat(\n      first(segments),\n      percentage,\n      last(segments)\n    );\n    return uncastArray(concatSegments);\n  }),\n};\nexport default entityTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/percentTransform.js\n **/","// @flow\nimport { last, reduce, update, concat, set, some } from 'lodash/fp';\nimport { combineUnits } from '../modules/math/types/entity';\nimport { Pattern, CaptureOptions } from '../modules/patternMatcher';\nimport type { Transformer, TokenNode } from '../modules/transformer/types';\nimport {\n  TOKEN_NUMBER, TOKEN_UNIT_NAME, TOKEN_UNIT_PREFIX, TOKEN_UNIT_SUFFIX,\n} from '../tokenTypes';\nimport { baseEntity } from '../modules/math/types';\nimport type { Units, EntityNode } from '../modules/math/types'; // eslint-disable-line\nimport { INTERMEDIATE_UNIT, combineUnitNamesPrefixesSuffixes } from './util';\nimport { evenIndexElements, oddIndexElements, mapUnlessNull, flatZip, uncastArray } from '../util';\n\n\nconst getEntities = (segment: TokenNode[]): ?(EntityNode[]) => {\n  const segmentWithIntermediateUnits = combineUnitNamesPrefixesSuffixes(segment);\n  if (segmentWithIntermediateUnits === null) return null;\n\n  /*\n  Combine all units and numbers into entities. Examples of algorithm below:\n  number unit1\n    => [Entity(number unit1)]\n  unit1 number\n    => [Entity(number unit1)]\n  number unit1 unit2\n    => [Entity(number unit1 unit2)]\n  number1 unit1 number1 unit2\n    => [Entity(number1 unit1), Entity(number2 unit2)]\n  unit1 number1 unit2 number2 unit3\n    => [Entity(number1 unit1 unit2), Entity(number2 unit3)]\n  */\n  const baseEntityValue = { ...baseEntity, quantity: undefined };\n  const maybeEntities = reduce((accum, tag) => {\n    if (tag.type === INTERMEDIATE_UNIT) {\n      const unit: Units = { [tag.name]: tag.power };\n      return update([accum.length - 1, 'units'], combineUnits(unit), accum);\n    } else if (tag.type === TOKEN_NUMBER && last(accum).quantity === undefined) {\n      return set([accum.length - 1, 'quantity'], tag.value, accum);\n    } else if (tag.type === TOKEN_NUMBER) {\n      const newEntityValue = set('quantity', tag.value, baseEntityValue);\n      return concat(accum, newEntityValue);\n    }\n    return accum;\n  }, [baseEntityValue], segmentWithIntermediateUnits);\n\n  if (some(entity => entity.quantity === undefined, maybeEntities)) return null;\n\n  const entities: EntityNode[] = maybeEntities;\n  return entities;\n};\n\nconst unitParts = [TOKEN_NUMBER, TOKEN_UNIT_NAME, TOKEN_UNIT_PREFIX, TOKEN_UNIT_SUFFIX];\n\nconst entityTransform: Transformer = {\n  pattern: new Pattern([\n    new CaptureOptions(unitParts).negate().lazy().any(),\n    new Pattern([\n      new CaptureOptions(unitParts).lazy().oneOrMore(),\n      new CaptureOptions(unitParts).negate().lazy().any(),\n    ]).oneOrMore(),\n  ]),\n  transform: (captureGroups, transform) => transform(evenIndexElements(captureGroups), segments => {\n    const unitSegments = mapUnlessNull(getEntities, oddIndexElements(captureGroups));\n    if (!unitSegments) return null;\n\n    const zippedSegments = flatZip(segments, unitSegments);\n    return uncastArray(zippedSegments);\n  }),\n};\nexport default entityTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/entityTransform.js\n **/","// @flow\nimport {\n  keys, flow, mergeWith, omitBy, eq, reduce, toPairs, mapValues, multiply, isEqual, every, curry,\n  isEmpty, sortBy, set, size, map, filter, groupBy, values, flatMap, fromPairs, some, overEvery,\n  reject, flatten, mapKeys, propertyOf,\n} from 'lodash/fp';\nimport { baseCompositeEntity, baseEntity } from '.';\nimport type { // eslint-disable-line\n  ResolverContext, ConversionDescriptor, UnitName, Units, EntityNode, CompositeEntityNode,\n} from '.';\nimport type { Curry2, Curry3 } from '../../../utilTypes';\nimport { propagateNull, mapUnlessNull } from '../../../util';\nimport baseDimensions from '../../../../data/baseDimensions';\n\nconst getConversionDescriptor = (\n  context: ResolverContext,\n  unitName: UnitName,\n): ConversionDescriptor => {\n  const siUnitDescriptor = context.conversionDescriptors[unitName];\n  if (!siUnitDescriptor) throw new Error(`${unitName} is not defined`);\n  return siUnitDescriptor;\n};\n\n\n// Unit utils\nconst addUnitValues = (lhsUnitValue, rhsUnitValue) => ((lhsUnitValue || 0) + (rhsUnitValue || 0));\n\nconst unitIsLinear: Curry2<ResolverContext, UnitName, boolean> =\n  curry((context, unitName) => typeof getConversionDescriptor(context, unitName)[0] === 'number');\n\nexport const combineUnits: Curry2<Units, Units, Units> =\n  curry((units1, units2) => flow(mergeWith(addUnitValues), omitBy(eq(0)))(units1, units2));\n\nexport const getFundamentalUnits: Curry2<ResolverContext, Units, Units> =\n  curry((context, units) => reduce((accum, [unitName, unitValue]) => {\n    const siUnitDimensions = mapKeys(\n      propertyOf(baseDimensions),\n      getConversionDescriptor(context, unitName)[1]\n    );\n    const scaledSiUnitDimensions = mapValues(multiply(unitValue), siUnitDimensions);\n    return combineUnits(scaledSiUnitDimensions, accum);\n  }, {}, toPairs(units)));\n\nexport const unitsAreLinear: Curry2<ResolverContext, Units, boolean> =\n  curry((context, units) => flow(keys, every(unitIsLinear(context)))(units));\n\nexport const unitsAreCompatable: Curry3<ResolverContext, Units, Units, boolean> =\n  curry((context, units1, units2) => (\n    isEqual(getFundamentalUnits(context, units1), getFundamentalUnits(context, units2))\n  ));\n\nconst sizeWithoutLengthBug = flow(keys, size);\nexport const groupUnitsByFundamentalDimensions = curry((\n  context: ResolverContext,\n  units: Units\n): { [key: UnitName]: { [key: number]: UnitName[] } } => {\n  const unitNames = keys(units);\n\n  const unitsWithOneFundamentalQuantity = filter(unitName => (\n    sizeWithoutLengthBug(getConversionDescriptor(context, unitName)[1]) === 1\n  ), unitNames);\n\n  const unitsGroupedByFundamentalType = groupBy(unitName => (\n    keys(getConversionDescriptor(context, unitName)[1])[0]\n  ), unitsWithOneFundamentalQuantity);\n\n  const unitsGroupedByFundamentalTypeThenFundamentalPower = mapValues(groupBy(unitName => (\n    values(getConversionDescriptor(context, unitName)[1])[0]\n  )), unitsGroupedByFundamentalType);\n\n  return unitsGroupedByFundamentalTypeThenFundamentalPower;\n});\n\n\n// Entity utils\nexport const isUnitless = (entity: EntityNode): bool => isEmpty(entity.units);\n\ntype ConversionDirection = number;\nconst conversionValueNumerator = 1;\nconst conversionValueDenominator = -1;\n\nconst calculateConversionValue = (\n  context: ResolverContext,\n  direction: ConversionDirection,\n  units: Units\n) => (quantity: number) => reduce((quantity, unitName) => {\n  const siUnitValue = getConversionDescriptor(context, unitName)[0];\n\n  if (typeof siUnitValue === 'number') {\n    return quantity * Math.pow(siUnitValue, units[unitName] * direction);\n  } else if (direction === conversionValueNumerator) {\n    return siUnitValue.convertFromBase(quantity);\n  }\n  return siUnitValue.convertToBase(quantity);\n}, quantity, keys(units));\n\nexport const convertTo = (\n  context: ResolverContext,\n  units: Units,\n  entity: EntityNode\n): ?EntityNode => {\n  if (isEqual(units, entity.units)) return entity;\n  if (!unitsAreCompatable(context, units, entity.units)) return null;\n  const quantity = flow(\n    calculateConversionValue(context, conversionValueNumerator, entity.units),\n    calculateConversionValue(context, conversionValueDenominator, units)\n  )(entity.quantity);\n  return { ...baseEntity, quantity, units };\n};\n\nexport const convertToFundamentalUnits = (\n  context: ResolverContext,\n  entity: EntityNode\n): ?EntityNode => (\n  convertTo(context, getFundamentalUnits(context, entity.units), entity)\n);\n\nexport const convertComposite = (\n  context: ResolverContext,\n  units: Units[],\n  entity: EntityNode\n): ?CompositeEntityNode => {\n  const unitNames = mapUnlessNull(unit => (\n    size(unit) === 1 ? keys(unit)[0] : null\n  ), units);\n\n  if (!unitNames) return null;\n\n  const sortedUnitNames = sortBy(unit => (\n    -Number(getConversionDescriptor(context, unit)[0])\n  ), unitNames);\n  const sortedUnits = map(unit => ({ [unit]: 1 }), sortedUnitNames);\n\n  const result = reduce(propagateNull((accum, unit) => {\n    const convertedEntity = convertTo(context, unit, accum.remainder);\n    if (!convertedEntity) return null;\n\n    const { quantity } = convertedEntity;\n\n    // Add small amount to account for rounding errors\n    const compositeQuantity = Math.floor(quantity + 1E-6);\n    const remainderQuantity = quantity - compositeQuantity;\n\n    return {\n      composite: accum.composite.concat(set('quantity', compositeQuantity, convertedEntity)),\n      remainder: set('quantity', remainderQuantity, convertedEntity),\n    };\n  }), {\n    remainder: entity,\n    composite: [],\n  }, sortedUnits);\n\n  if (!result) return null;\n\n  return { ...baseCompositeEntity, value: result.composite };\n};\n\n// If you have lhs = x meter^-1 yard, convert to unitless\nexport const simplifyUnits = (\n  context: ResolverContext,\n  entity: EntityNode\n): ?EntityNode => {\n  const allUnitGroups: (UnitName[])[] = flow(\n    groupUnitsByFundamentalDimensions(context),\n    values,\n    flatMap(values)\n  )(entity.units);\n\n  // If a unit group has both positive and negative powers\n  // { yard: -1 meter: 1 } is rejected, but { yard: 1, meter: 1 } is not\n  const unitsToConvertTo = reject(overEvery([\n    some(unit => entity.units[unit] > 0),\n    some(unit => entity.units[unit] < 0),\n  ]), allUnitGroups);\n\n  if (size(entity.units) === unitsToConvertTo.length) return entity;\n\n  const conversionUnits = flow(\n    flatten,\n    map(unit => [unit, entity.units[unit]]),\n    fromPairs\n  )(unitsToConvertTo);\n\n  return convertTo(context, conversionUnits, entity);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/types/entity.js\n **/","module.exports = {\n\t\"time\": \"second\",\n\t\"length\": \"meter\",\n\t\"mass\": \"kilogram\",\n\t\"currency\": \"EUR\",\n\t\"memory\": \"bit\",\n\t\"absoluteTemperature\": \"Kelvin\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./data/baseDimensions.json\n ** module id = 30\n ** module chunks = 0\n **/","// @flow\nimport { keys } from 'lodash/fp';\nimport Color from 'color-forge';\nimport type { Token } from '../modules/tokenizer/types';\nimport { Pattern, CaptureOptions } from '../modules/patternMatcher';\nimport type { Transformer, TokenNode } from '../modules/transformer/types';\nimport { baseColor, baseDateTime, baseFunction, baseEntity } from '../modules/math/types';\nimport type { Node, ColorNode, DateTimeNode, DateTime } from '../modules/math/types'; // eslint-disable-line\nimport { FUNCTION_EXPONENT } from '../modules/math/functions';\nimport { TOKEN_COLOR, TOKEN_DATE_TIME, TOKEN_CONSTANT } from '../tokenTypes';\nimport { evenIndexElements, oddIndexElements, mapUnlessNull, flatZip, uncastArray } from '../util';\n\n\nconst transforms = {\n  [TOKEN_COLOR]: (token: Token): ColorNode => {\n    const { values, alpha, space } = Color.hex(token.value);\n    return { ...baseColor, values, alpha, space };\n  },\n  [TOKEN_DATE_TIME]: (token: Token): ?DateTimeNode => {\n    const { directionHint, value } = token.value;\n    if (!value) return null;\n    return { ...baseDateTime, value, directionHint };\n  },\n  [TOKEN_CONSTANT]: (token: Token): ?Node => {\n    const { value, power } = token.value;\n    if (!value) return null;\n    if (power === 1) return value;\n    const powerEntity = { ...baseEntity, quantity: power };\n    return { ...baseFunction, name: FUNCTION_EXPONENT, args: [value, powerEntity] };\n  },\n};\nconst transformTokens = keys(transforms);\n\nconst remainingTokensTransform: Transformer = {\n  pattern: new Pattern([\n    new CaptureOptions(transformTokens).negate().lazy().any(),\n    new Pattern([\n      new CaptureOptions(transformTokens),\n      new CaptureOptions(transformTokens).negate().lazy().any(),\n    ]).oneOrMore(),\n  ]),\n  transform: (captureGroups, transform) => transform(evenIndexElements(captureGroups), segments => {\n    const remainingTokenSegments = mapUnlessNull(element => {\n      const token: Token = element[0];\n      return transforms[token.type](token);\n    }, oddIndexElements(captureGroups));\n\n    if (!remainingTokenSegments) return null;\n\n    const remainingTokens: TokenNode[] = flatZip(segments, remainingTokenSegments);\n    return uncastArray(remainingTokens);\n  }),\n};\nexport default remainingTokensTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/remainingTokensTransform.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_32__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"color-forge\"\n ** module id = 32\n ** module chunks = 0\n **/","// @flow\nimport { values, map, without, isEmpty, reject } from 'lodash/fp';\nimport { CaptureWildcard } from '../modules/patternMatcher';\nimport type { Transformer } from '../modules/transformer/types';\nimport * as nodes from '../modules/math/types';\nimport { TOKEN_NOOP } from '../tokenTypes';\nimport { compactMiscGroup } from './util';\n\nconst nodeTypes = values(nodes);\n\nconst allowedTypes = [...nodeTypes, TOKEN_NOOP];\n\nconst bracketTransform: Transformer = {\n  pattern: new CaptureWildcard().oneOrMore().lazy(),\n  transform: captureGroups => {\n    const captureGroup = captureGroups[0];\n    const captureGroupTypes = map('type', captureGroup);\n    const extraneousTypes = without(allowedTypes, captureGroupTypes);\n\n    if (!isEmpty(extraneousTypes)) return null;\n\n    const value = reject({ type: TOKEN_NOOP }, captureGroup);\n\n    // compactMiscGroup will return null for empty values, but that will make the transformer\n    // incorrectly fail\n    if (isEmpty(value)) return [];\n\n    const miscGroup = { type: nodes.NODE_MISC_GROUP, value };\n    return compactMiscGroup(miscGroup);\n  },\n};\nexport default bracketTransform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/miscGroupTransform.js\n **/","// @flow\nexport { default as resolver } from './resolver';\nexport { default as defaultContext } from './resolverContext';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/index.js\n **/","// @flow\nimport { set, get, map, forEach } from 'lodash/fp';\nimport { set as setMut } from 'lodash';\nimport functions from './functions/definitions';\nimport {\n  NODE_BRACKETS, NODE_FUNCTION, NODE_ASSIGNMENT, NODE_MISC_GROUP, NODE_CONVERSION, NODE_ENTITY,\n  NODE_COLOR, NODE_DATE_TIME, NODE_PERCENTAGE, NODE_COMPOSITE_ENTITY, baseAssignment,\n} from './types';\nimport type { // eslint-disable-line\n  ResolverContext, Node, BracketsNode, FunctionNode, AssignmentNode, MiscGroupNode, ConversionNode,\n} from './types';\nimport { resolve as miscGroupResolve } from './types/miscGroup';\nimport { convert as conversionConvert } from './types/conversion';\nimport { resolveDefaults as dateTimeResolveDefaults } from './types/dateTime';\nimport { mapUnlessNull } from '../../util';\n\nconst resolver = {\n  typedFunctionTrie: {},\n  variadicFunctions: {},\n  context: {},\n  setContext(context: ResolverContext) {\n    return set('context', context, this);\n  },\n  extendFunction(functionName: string, types: string[], fn: Function) {\n    return set(['typedFunctionTrie', functionName, ...types, '_fn'], fn, this);\n  },\n  resolve(value: Node): ?Node {\n    if (!value) return null;\n    switch (value.type) {\n      case NODE_BRACKETS: {\n        const bracketsNode: BracketsNode = value;\n        return this.resolve(bracketsNode.value);\n      }\n      case NODE_FUNCTION: {\n        const functionNode: FunctionNode = value;\n        return this.executeFunction(functionNode);\n      }\n      case NODE_MISC_GROUP: {\n        const miscGroupNode: MiscGroupNode = value;\n        const values = mapUnlessNull(value => this.resolve(value), miscGroupNode.value);\n        if (!values) return null;\n        return miscGroupResolve(this.context, values);\n      }\n      case NODE_CONVERSION: {\n        const { context } = this;\n        const conversionNode: ConversionNode = value;\n\n        const resolvedValue = this.resolve(conversionNode.value);\n        if (!resolvedValue) return null;\n\n        return conversionConvert(context, value, resolvedValue);\n      }\n      case NODE_ASSIGNMENT: {\n        const assignmentNode: AssignmentNode = value;\n\n        const resolvedValue = this.resolve(assignmentNode.value);\n        if (!resolvedValue) return null;\n\n        return { ...baseAssignment, value: resolvedValue, identifier: assignmentNode.identifier };\n      }\n      case NODE_DATE_TIME:\n        return dateTimeResolveDefaults(this.context, value);\n      case NODE_ENTITY:\n      case NODE_COMPOSITE_ENTITY:\n      case NODE_PERCENTAGE:\n      case NODE_COLOR:\n        return value;\n      default:\n        return null;\n    }\n  },\n  executeFunction(fn: Function) {\n    const { name, args: unresolvedArgs } = fn;\n\n    const args = mapUnlessNull(arg => this.resolve(arg), unresolvedArgs);\n    if (!args) return null;\n\n    const triePath = map('type', args);\n    let func = get(['typedFunctionTrie', name, ...triePath, '_fn'], this);\n    if (!func) func = get(['variadicFunctions', name], this);\n    if (!func) return null;\n\n    return func(this.context, ...args);\n  },\n};\n\nforEach(([functionName, types, fn]) => {\n  if (types) {\n    setMut(resolver, ['typedFunctionTrie', functionName, ...types, '_fn'], fn);\n  } else {\n    resolver.variadicFunctions[functionName] = fn;\n  }\n}, functions);\n\n\nexport default resolver;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/resolver.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_36__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash\"\n ** module id = 36\n ** module chunks = 0\n **/","// @flow\nimport color from './color';\nimport colorEntity from './colorEntity';\nimport colorPercentage from './colorPercentage';\nimport constructors from './constructors';\nimport dateTime from './dateTime';\nimport dateTimeEntity from './dateTimeEntity';\nimport entity from './entity';\nimport entityPercentage from './entityPercentage';\n\nexport default [].concat(\n  color,\n  colorEntity,\n  colorPercentage,\n  constructors,\n  dateTime,\n  dateTimeEntity,\n  entity,\n  entityPercentage,\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/definitions.js\n **/","// @flow\nimport Color from 'color-forge';\nimport { NODE_COLOR, NODE_ENTITY, NODE_PERCENTAGE, baseColor } from '../types';\nimport type { ResolverContext, ColorNode, Node } from '../types'; // eslint-disable-line\nimport {\n  FUNCTION_ADD, FUNCTION_SUBTRACT, FUNCTION_MULTIPLY, FUNCTION_DIVIDE, FUNCTION_MIX,\n  FUNCTION_SCREEN, FUNCTION_OVERLAY, FUNCTION_DODGE, FUNCTION_BURN,\n} from '.';\n\nconst operationFactory = operation => (\n  context: ResolverContext,\n  left: ColorNode,\n  right: ColorNode\n): ColorNode => {\n  const leftColor = new Color(left.values, left.alpha, left.space);\n  const rightColor = new Color(right.values, right.alpha, right.space);\n  const { values, alpha, space } = leftColor[operation](rightColor);\n  return { ...baseColor, values, alpha, space };\n};\n\nconst createMixer = fn => (\n  context: ResolverContext,\n  left: ColorNode,\n  right: ColorNode,\n  valueNode: Node\n): ColorNode => {\n  const leftColor = new Color(left.values, left.alpha, left.space);\n  const rightColor = new Color(right.values, right.alpha, right.space);\n  const { values, alpha, space } = leftColor.mix(rightColor, fn(valueNode));\n  return { ...baseColor, values, alpha, space };\n};\n\nexport const add = operationFactory('add');\nexport const subtract = operationFactory('subtract');\nexport const multiply = operationFactory('multiply');\nexport const divide = operationFactory('divide');\nexport const mix = operationFactory('mix');\nexport const screen = operationFactory('screen');\nexport const overlay = operationFactory('overlay');\nexport const dodge = operationFactory('dodge');\nexport const burn = operationFactory('burn');\n\nconst mixEntity = createMixer(entity => entity.quantity);\nconst mixPercentage = createMixer(percentage => percentage.value / 100);\n\nexport default [\n  [FUNCTION_ADD, [NODE_COLOR, NODE_COLOR], add],\n  [FUNCTION_SUBTRACT, [NODE_COLOR, NODE_COLOR], subtract],\n  [FUNCTION_MULTIPLY, [NODE_COLOR, NODE_COLOR], multiply],\n  [FUNCTION_DIVIDE, [NODE_COLOR, NODE_COLOR], divide],\n  [FUNCTION_MIX, [NODE_COLOR, NODE_COLOR], mix],\n  [FUNCTION_SCREEN, [NODE_COLOR, NODE_COLOR], screen],\n  [FUNCTION_OVERLAY, [NODE_COLOR, NODE_COLOR], overlay],\n  [FUNCTION_DODGE, [NODE_COLOR, NODE_COLOR], dodge],\n  [FUNCTION_BURN, [NODE_COLOR, NODE_COLOR], burn],\n  [FUNCTION_MIX, [NODE_COLOR, NODE_COLOR, NODE_ENTITY], mixEntity],\n  [FUNCTION_MIX, [NODE_COLOR, NODE_COLOR, NODE_PERCENTAGE], mixPercentage],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/color.js\n **/","// @flow\nimport { NODE_COLOR, NODE_ENTITY } from '../types';\nimport type { ResolverContext, EntityNode, ColorNode } from '../types'; // eslint-disable-line\nimport {\n  FUNCTION_LIGHTEN, FUNCTION_DARKEN, FUNCTION_MULTIPLY, FUNCTION_DIVIDE, FUNCTION_EXPONENT,\n} from '.';\nimport { flip2 } from '../util/functions';\nimport { lighten, darken, evolveWhenUnitless } from '../util/color';\n\n\nconst lightenDarkenFactory = fn => evolveWhenUnitless((color, entity) => (\n  fn(color, entity.quantity)\n));\n\nconst multiplyDivideFactory = direction => evolveWhenUnitless((color, entity) => (\n  color.channelMultiply(entity.quantity ** direction)\n));\n\nconst exponentMath = evolveWhenUnitless((color, entity) => (\n  color.exponent(entity.quantity)\n));\n\nconst lightenMath = lightenDarkenFactory(lighten);\nconst darkenMath = lightenDarkenFactory(darken);\nconst multiplyMath = multiplyDivideFactory(1);\nconst divideMath = multiplyDivideFactory(-1);\n\nexport {\n  lightenMath as lighten,\n  darkenMath as darken,\n  multiplyMath as multiply,\n  divideMath as divide,\n  exponentMath as exponent,\n};\n\nexport default [\n  [FUNCTION_LIGHTEN, [NODE_COLOR, NODE_ENTITY], lightenMath],\n  [FUNCTION_DARKEN, [NODE_COLOR, NODE_ENTITY], darkenMath],\n  [FUNCTION_MULTIPLY, [NODE_COLOR, NODE_ENTITY], multiplyMath],\n  [FUNCTION_DIVIDE, [NODE_COLOR, NODE_ENTITY], divideMath],\n  [FUNCTION_EXPONENT, [NODE_COLOR, NODE_ENTITY], exponentMath],\n  [FUNCTION_MULTIPLY, [NODE_ENTITY, NODE_COLOR], flip2(multiplyMath)],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/colorEntity.js\n **/","// @flow\n\ntype Flip2<A, B, C, D> = (fn: (a: A, b: B, c: C) => D) => (a: A, c: C, b: B) => D;\n\nexport const flip2: Flip2<any, any, any, any> = // eslint-disable-line\n  fn => (context, left, right) => fn(context, right, left);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/util/functions.js\n **/","// @flow\nimport Color from 'color-forge';\nimport { baseColor } from '../types';\nimport type { ResolverContext, EntityNode, ColorNode } from '../types'; // eslint-disable-line\nimport { isUnitless } from '../types/entity';\n\nexport const evolveColor = (node: ColorNode, evolve: (color: Color) => Color) => {\n  const { values, alpha, space } = evolve(new Color(node.values, node.alpha, node.space));\n  return { ...baseColor, values, alpha, space };\n};\n\nexport const evolveWhenUnitless = (evolve: (color: Color, entity: EntityNode) => Color) => (\n  context: ResolverContext,\n  left: ColorNode,\n  right: EntityNode\n): ?ColorNode => (\n  isUnitless(right)\n    ? evolveColor(left, color => evolve(color, right))\n    : null\n);\n\nexport const lighten =\n  (node: ColorNode, value: number) => evolveColor(node, color => color.lighten(value));\nexport const darken =\n  (node: ColorNode, value: number) => evolveColor(node, color => color.darken(value));\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/util/color.js\n **/","// @flow\nimport { NODE_COLOR, NODE_PERCENTAGE } from '../types';\nimport type { ResolverContext, PercentageNode, ColorNode } from '../types'; // eslint-disable-line\nimport { FUNCTION_LIGHTEN, FUNCTION_DARKEN, FUNCTION_ADD, FUNCTION_SUBTRACT } from '.';\nimport { lighten, darken, evolveColor } from '../util/color';\n\n\nconst lightenDarkenFactory = fn => (\n  context: ResolverContext,\n  left: ColorNode,\n  right: PercentageNode\n): ?ColorNode => evolveColor(left, color => fn(color, right.value / 100));\n\nconst lightenMath = lightenDarkenFactory(lighten);\nconst darkenMath = lightenDarkenFactory(darken);\n\nexport {\n  lightenMath as lighten,\n  darkenMath as darken,\n};\n\nexport default [\n  [FUNCTION_LIGHTEN, [NODE_COLOR, NODE_PERCENTAGE], lightenMath],\n  [FUNCTION_DARKEN, [NODE_COLOR, NODE_PERCENTAGE], darkenMath],\n  [FUNCTION_ADD, [NODE_COLOR, NODE_PERCENTAGE], lightenMath],\n  [FUNCTION_SUBTRACT, [NODE_COLOR, NODE_PERCENTAGE], darkenMath],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/colorPercentage.js\n **/","// @flow\nimport { curry, clamp, isEqual, zip } from 'lodash/fp';\nimport { NODE_ENTITY, NODE_PERCENTAGE, baseColor } from '../types';\nimport type { ResolverContext, Node, EntityNode, PercentageNode, ColorNode } from '../types'; // eslint-disable-line\nimport { convertToFundamentalUnits } from '../types/entity';\nimport {\n  FUNCTION_RGB, FUNCTION_RGBA, FUNCTION_HSL, FUNCTION_HSLA, FUNCTION_HSV, FUNCTION_HSVA,\n} from '.';\nimport { mapUnlessNull } from '../../../util';\nimport type { Curry2 } from '../../../utilTypes';\n\n\nconst toX = (value: number): Curry2<ResolverContext, Node, ?number> => curry((context, node) => {\n  if (!node) return null;\n\n  if (node.type === NODE_ENTITY) {\n    const fundamental = convertToFundamentalUnits(context, node);\n    if (!fundamental) return null;\n    return clamp(0, value, node.quantity);\n  } else if (node.type === NODE_PERCENTAGE) {\n    return (value * node.value) / 100;\n  }\n  return null;\n});\n\nconst to360 = toX(360);\nconst to255 = toX(255);\nconst to100 = toX(100);\nconst to1 = toX(1);\n\nconst toDegrees = (context: ResolverContext, node: Node): ?number => {\n  if (node && node.type === NODE_ENTITY) {\n    if (isEqual(node.units, { degree: 1 })) return node.quantity;\n    if (isEqual(node.units, { radian: 1 })) return (360 * node.quantity) / (2 * Math.PI);\n  }\n  return to360(context, node);\n};\n\nconst converter = (space, transformers) => (\n  context: ResolverContext,\n  arg1: Node,\n  arg2: Node,\n  arg3: Node,\n  a?: Node\n): ?ColorNode => {\n  const values = mapUnlessNull(([transformer, value]) => (\n    transformer(context, value)\n  ), zip(transformers, [arg1, arg2, arg3]));\n  if (!values) return null;\n\n  const alpha = a ? to1(context, a) : 1;\n  if (typeof alpha !== 'number') return null;\n\n  return { ...baseColor, space, values, alpha };\n};\n\nconst rgb = converter('rgb', [to255, to255, to255]);\nconst hsl = converter('hsl', [toDegrees, to100, to100]);\nconst hsv = converter('hsv', [toDegrees, to100, to100]);\n\nexport default [\n  [FUNCTION_RGB, null, rgb],\n  [FUNCTION_RGBA, null, rgb],\n  [FUNCTION_HSL, null, hsl],\n  [FUNCTION_HSLA, null, hsl],\n  [FUNCTION_HSV, null, hsv],\n  [FUNCTION_HSVA, null, hsv],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/constructors.js\n **/","// @flow\nimport { NODE_DATE_TIME, baseEntity } from '../types';\nimport type { ResolverContext, EntityNode, DateTimeNode } from '../types'; // eslint-disable-line\nimport { convertTo } from '../types/entity';\nimport { dateTimeToUTCUnix } from '../util/date';\nimport { FUNCTION_ADD, FUNCTION_SUBTRACT } from '.';\n\nconst addSubtract = (\n  context: ResolverContext,\n  left: DateTimeNode,\n  right: DateTimeNode\n): ?EntityNode => {\n  const leftUtcUnix = dateTimeToUTCUnix(left.value);\n  const rightUtcUnix = dateTimeToUTCUnix(right.value);\n  const milliseconds = Math.abs(leftUtcUnix - rightUtcUnix);\n\n  const dateEntity: EntityNode = {\n    ...baseEntity,\n    quantity: milliseconds,\n    units: { millisecond: 1 },\n  };\n\n  if (milliseconds > 86400000) {\n    return convertTo(context, { day: 1 }, dateEntity);\n  } else if (milliseconds > 3600000) {\n    return convertTo(context, { hour: 1 }, dateEntity);\n  } else if (milliseconds > 60000) {\n    return convertTo(context, { minute: 1 }, dateEntity);\n  } else if (milliseconds > 1000) {\n    return convertTo(context, { second: 1 }, dateEntity);\n  }\n  return dateEntity;\n};\n\nexport {\n  addSubtract as add,\n  addSubtract as subtract,\n};\n\nexport default [\n  [FUNCTION_ADD, [NODE_DATE_TIME, NODE_DATE_TIME], addSubtract],\n  [FUNCTION_SUBTRACT, [NODE_DATE_TIME, NODE_DATE_TIME], addSubtract],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/dateTime.js\n **/","// @flow\nimport { map } from 'lodash/fp';\nimport tz from 'timezone/loaded';\nimport type { DateTime } from '../types';\n\nexport const dateTimeToUTCUnix = (dateTime: DateTime): number => {\n  const { year, month, date, hour, minute, second, timezone } = dateTime;\n  return tz(timezone)([year, month, date, hour, minute, second], 'UTC');\n};\n\nexport const utcUnixToTz = (utcUnix: number, timezone: string): number =>\n  tz(utcUnix, timezone);\n\nexport const unixTzToDateTime = (unix: number, timezone: string): DateTime => {\n  const formattedString = tz(unix, '%Y %m %d %H %M %S');\n  const [year, month, date, hour, minute, second] = map(Number, formattedString.split(' '));\n  const dateTime: DateTime = { year, month, date, hour, minute, second, timezone };\n  return dateTime;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/util/date.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_46__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"timezone/loaded\"\n ** module id = 46\n ** module chunks = 0\n **/","// @flow\nimport { NODE_DATE_TIME, NODE_ENTITY, baseDateTime } from '../types';\nimport type { ResolverContext, EntityNode, DateTimeNode } from '../types'; // eslint-disable-line\nimport { convertTo } from '../types/entity';\nimport { dateTimeToUTCUnix, utcUnixToTz, unixTzToDateTime } from '../util/date';\nimport { FUNCTION_ADD, FUNCTION_SUBTRACT } from '.';\nimport { flip2 } from '../util/functions';\n\nconst addSubtractFactory = direction => (\n  context: ResolverContext,\n  left: DateTimeNode,\n  right: EntityNode\n): ?DateTimeNode => {\n  const millisecondsEntity = convertTo(context, { millisecond: 1 }, right);\n  if (!millisecondsEntity) return null;\n\n  const utcUnix = dateTimeToUTCUnix(left.value);\n  const offset = millisecondsEntity.quantity;\n  const newUtcUnix = utcUnix + (offset * direction);\n  const newUnix = utcUnixToTz(newUtcUnix, left.value.timezone);\n\n  const value = unixTzToDateTime(newUnix, left.value.timezone);\n\n  return { ...baseDateTime, value, directionHint: 1 };\n};\n\nconst addMath = addSubtractFactory(1);\nconst subtractMath = addSubtractFactory(-1);\n\n\nexport {\n  addMath as add,\n  subtractMath as subtract,\n};\n\nexport default [\n  [FUNCTION_ADD, [NODE_DATE_TIME, NODE_ENTITY], addMath],\n  [FUNCTION_SUBTRACT, [NODE_DATE_TIME, NODE_ENTITY], subtractMath],\n  [FUNCTION_ADD, [NODE_ENTITY, NODE_DATE_TIME], flip2(addMath)],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/dateTimeEntity.js\n **/","// @flow\nimport unary from './unary';\nimport bilinear from './bilinear';\n\nexport * from './unary';\nexport * from './bilinear';\n\nexport default [].concat(\n  unary,\n  bilinear,\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/entity/index.js\n **/","// @flow\nimport { multiply, mapValues } from 'lodash/fp';\nimport gamma from 'gamma';\nimport mathp from 'mathp';\nimport { convertToFundamentalUnits, isUnitless } from '../../types/entity';\nimport { NODE_ENTITY, baseEntity } from '../../types';\nimport type { ResolverContext, EntityNode } from '../../types'; // eslint-disable-line\nimport {\n  FUNCTION_SQRT, FUNCTION_CBRT, FUNCTION_NEGATE, FUNCTION_ROUND, FUNCTION_FLOOR, FUNCTION_CEIL,\n  FUNCTION_ABS, FUNCTION_FROUND, FUNCTION_TRUNC, FUNCTION_SIGN, FUNCTION_CLZ32, FUNCTION_FACTORIAL,\n  FUNCTION_SIN, FUNCTION_COS, FUNCTION_TAN, FUNCTION_LOG, FUNCTION_LOG1P, FUNCTION_LOG10,\n  FUNCTION_LOG2, FUNCTION_ACOSH, FUNCTION_ASINH, FUNCTION_ATANH, FUNCTION_COSH, FUNCTION_SINH,\n  FUNCTION_TANH, FUNCTION_SINC, FUNCTION_SEC, FUNCTION_CSC, FUNCTION_COT, FUNCTION_ASEC,\n  FUNCTION_ACSC, FUNCTION_ACOT, FUNCTION_SECH, FUNCTION_CSCH, FUNCTION_COTH, FUNCTION_ASECH,\n  FUNCTION_ACSCH, FUNCTION_ACOTH, FUNCTION_COSC, FUNCTION_TANC,\n} from '..';\n\nconst unitlessFunction = (fn: (value: number) => number) => (\n  context: ResolverContext,\n  entity: EntityNode\n): ?EntityNode => {\n  const fundamental = convertToFundamentalUnits(context, entity);\n  return fundamental && isUnitless(fundamental)\n    ? { ...baseEntity, quantity: fn(fundamental.quantity) }\n    : null;\n};\n\nconst quantityFn = (fn: (value: number) => number) => (\n  context: ResolverContext,\n  entity: EntityNode\n): ?EntityNode => ({\n  ...baseEntity,\n  quantity: fn(entity.quantity),\n  units: entity.units,\n});\n\nconst powerFn = (power: number) => (\n  context: ResolverContext,\n  entity: EntityNode\n): ?EntityNode => (\n  entity.quantity >= 0\n    ? {\n      ...baseEntity,\n      quantity: Math.pow(entity.quantity, 1 / power),\n      units: mapValues(multiply(1 / power), entity.units),\n    }\n    : null\n);\n\n\nexport const sqrt = powerFn(2);\nexport const cbrt = powerFn(3);\n\nexport const negate = quantityFn(x => -x);\nexport const round = quantityFn(Math.round);\nexport const floor = quantityFn(Math.floor);\nexport const ceil = quantityFn(Math.ceil);\nexport const abs = quantityFn(Math.abs);\nexport const fround = quantityFn(mathp.fround);\nexport const trunc = quantityFn(mathp.trunc);\nexport const sign = quantityFn(mathp.sign);\nexport const clz32 = quantityFn(mathp.clz32);\n\nexport const factorial = unitlessFunction(value => gamma(value + 1));\n\n// Fix annoying sin values\nexport const sin = unitlessFunction(x => ((x % Math.PI !== 0) ? Math.sin(x) : 0));\nexport const cos = unitlessFunction(Math.cos);\nexport const tan = unitlessFunction(Math.tan);\nexport const log = unitlessFunction(Math.log);\n\nexport const log1p = unitlessFunction(mathp.log1p);\nexport const log10 = unitlessFunction(mathp.log10);\nexport const log2 = unitlessFunction(mathp.log2);\n\nexport const acosh = unitlessFunction(mathp.acosh);\nexport const asinh = unitlessFunction(mathp.asinh);\nexport const atanh = unitlessFunction(mathp.atanh);\nexport const cosh = unitlessFunction(mathp.cosh);\nexport const sinh = unitlessFunction(mathp.sinh);\nexport const tanh = unitlessFunction(mathp.tanh);\n\nexport const sinc = unitlessFunction(mathp.sinc);\nexport const sec = unitlessFunction(mathp.sec);\nexport const csc = unitlessFunction(mathp.csc);\nexport const cot = unitlessFunction(mathp.cot);\nexport const asec = unitlessFunction(mathp.asec);\nexport const acsc = unitlessFunction(mathp.acsc);\nexport const acot = unitlessFunction(mathp.acot);\nexport const sech = unitlessFunction(mathp.sech);\nexport const csch = unitlessFunction(mathp.csch);\nexport const coth = unitlessFunction(mathp.coth);\nexport const asech = unitlessFunction(mathp.asech);\nexport const acsch = unitlessFunction(mathp.acsch);\nexport const acoth = unitlessFunction(mathp.acoth);\n\nexport const cosc = unitlessFunction(x => Math.cos(x) / x);\nexport const tanc = unitlessFunction(x => ((x === 0) ? 1 : Math.tan(x) / x));\n\nexport default [\n  [FUNCTION_SQRT, [NODE_ENTITY], sqrt],\n  [FUNCTION_CBRT, [NODE_ENTITY], cbrt],\n  [FUNCTION_NEGATE, [NODE_ENTITY], negate],\n  [FUNCTION_ROUND, [NODE_ENTITY], round],\n  [FUNCTION_FLOOR, [NODE_ENTITY], floor],\n  [FUNCTION_CEIL, [NODE_ENTITY], ceil],\n  [FUNCTION_ABS, [NODE_ENTITY], abs],\n  [FUNCTION_FROUND, [NODE_ENTITY], fround],\n  [FUNCTION_TRUNC, [NODE_ENTITY], trunc],\n  [FUNCTION_SIGN, [NODE_ENTITY], sign],\n  [FUNCTION_CLZ32, [NODE_ENTITY], clz32],\n  [FUNCTION_FACTORIAL, [NODE_ENTITY], factorial],\n  [FUNCTION_SIN, [NODE_ENTITY], sin],\n  [FUNCTION_COS, [NODE_ENTITY], cos],\n  [FUNCTION_TAN, [NODE_ENTITY], tan],\n  [FUNCTION_LOG, [NODE_ENTITY], log],\n  [FUNCTION_LOG1P, [NODE_ENTITY], log1p],\n  [FUNCTION_LOG10, [NODE_ENTITY], log10],\n  [FUNCTION_LOG2, [NODE_ENTITY], log2],\n  [FUNCTION_ACOSH, [NODE_ENTITY], acosh],\n  [FUNCTION_ASINH, [NODE_ENTITY], asinh],\n  [FUNCTION_ATANH, [NODE_ENTITY], atanh],\n  [FUNCTION_COSH, [NODE_ENTITY], cosh],\n  [FUNCTION_SINH, [NODE_ENTITY], sinh],\n  [FUNCTION_TANH, [NODE_ENTITY], tanh],\n  [FUNCTION_SINC, [NODE_ENTITY], sinc],\n  [FUNCTION_SEC, [NODE_ENTITY], sec],\n  [FUNCTION_CSC, [NODE_ENTITY], csc],\n  [FUNCTION_COT, [NODE_ENTITY], cot],\n  [FUNCTION_ASEC, [NODE_ENTITY], asec],\n  [FUNCTION_ACSC, [NODE_ENTITY], acsc],\n  [FUNCTION_ACOT, [NODE_ENTITY], acot],\n  [FUNCTION_SECH, [NODE_ENTITY], sech],\n  [FUNCTION_CSCH, [NODE_ENTITY], csch],\n  [FUNCTION_COTH, [NODE_ENTITY], coth],\n  [FUNCTION_ASECH, [NODE_ENTITY], asech],\n  [FUNCTION_ACSCH, [NODE_ENTITY], acsch],\n  [FUNCTION_ACOTH, [NODE_ENTITY], acoth],\n  [FUNCTION_COSC, [NODE_ENTITY], cosc],\n  [FUNCTION_TANC, [NODE_ENTITY], tanc],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/entity/unary.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_50__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"gamma\"\n ** module id = 50\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_51__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mathp\"\n ** module id = 51\n ** module chunks = 0\n **/","// @flow\nimport { matchesProperty, mapValues, update, multiply } from 'lodash/fp';\nimport {\n  convertTo, combineUnits, convertToFundamentalUnits, unitsAreLinear, isUnitless, simplifyUnits,\n} from '../../types/entity';\nimport { NODE_ENTITY, baseEntity } from '../../types';\nimport type { ResolverContext, EntityNode } from '../../types'; // eslint-disable-line\nimport {\n  FUNCTION_ADD, FUNCTION_SUBTRACT, FUNCTION_MULTIPLY, FUNCTION_DIVIDE, FUNCTION_EXPONENT,\n} from '..';\n\nconst isZero = matchesProperty('quantity', 0);\nconst zeroEntity = { ...baseEntity, quantity: 0 };\n\n\nconst addSubtractFactory = direction => (\n  context: ResolverContext,\n  left: EntityNode,\n  right: EntityNode\n): ?EntityNode => {\n  if (!unitsAreLinear(context, left.units) || !unitsAreLinear(context, right.units)) return null;\n  if (isZero(right)) return left;\n  if (isZero(left)) return update('quantity', multiply(direction), right);\n\n  const rightWithLhsUnits = convertTo(context, left.units, right);\n  if (!rightWithLhsUnits) return null;\n\n  const quantity = left.quantity + (rightWithLhsUnits.quantity * direction);\n  const units = left.units;\n  return { ...baseEntity, quantity, units };\n};\n\nconst multiplyDivideFactory = direction => (\n  context: ResolverContext,\n  left: EntityNode,\n  right: EntityNode\n): ?EntityNode => {\n  if (isZero(left)) return zeroEntity;\n  if (isZero(right)) return direction === 1 ? zeroEntity : null; // No division by zero\n\n  const rightEffectiveUnits = direction === 1\n    ? right.units\n    : mapValues(multiply(-1), right.units);\n\n  const quantity = left.quantity * Math.pow(right.quantity, direction);\n  const units = combineUnits(left.units, rightEffectiveUnits);\n\n  let entity = { ...baseEntity, quantity, units };\n  entity = simplifyUnits(context, entity);\n\n  return entity;\n};\n\nconst exponentMath = (\n  context: ResolverContext,\n  left: EntityNode,\n  right: EntityNode\n): ?EntityNode => {\n  let rightFundamentalUnits = right;\n\n  if (!isUnitless(right)) {\n    // Note: done for minor perf\n    rightFundamentalUnits = convertToFundamentalUnits(context, right);\n  }\n\n  if (!rightFundamentalUnits || !isUnitless(rightFundamentalUnits)) return null;\n\n  const quantity = Math.pow(left.quantity, rightFundamentalUnits.quantity);\n  const units = mapValues(multiply(right.quantity), left.units);\n  return { ...baseEntity, quantity, units };\n};\n\nconst addMath = addSubtractFactory(1);\nconst subtractMath = addSubtractFactory(-1);\nconst multiplyMath = multiplyDivideFactory(1);\nconst divideMath = multiplyDivideFactory(-1);\n\nexport {\n  addMath as add,\n  subtractMath as subtract,\n  multiplyMath as multiply,\n  divideMath as divide,\n  exponentMath as exponent,\n};\n\nexport default [\n  [FUNCTION_ADD, [NODE_ENTITY, NODE_ENTITY], addMath],\n  [FUNCTION_SUBTRACT, [NODE_ENTITY, NODE_ENTITY], subtractMath],\n  [FUNCTION_MULTIPLY, [NODE_ENTITY, NODE_ENTITY], multiplyMath],\n  [FUNCTION_DIVIDE, [NODE_ENTITY, NODE_ENTITY], divideMath],\n  [FUNCTION_EXPONENT, [NODE_ENTITY, NODE_ENTITY], exponentMath],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/entity/bilinear.js\n **/","// @flow\nimport { NODE_ENTITY, NODE_PERCENTAGE, baseEntity } from '../types';\nimport type { ResolverContext, EntityNode, PercentageNode } from '../types'; // eslint-disable-line\nimport { FUNCTION_ADD, FUNCTION_SUBTRACT, FUNCTION_MULTIPLY, FUNCTION_DIVIDE } from '.';\nimport { flip2 } from '../util/functions';\n\n\nconst transform = (transform: (entityValue: number, percentageValue: number) => number) => (\n  context: ResolverContext,\n  entity: EntityNode,\n  percentage: PercentageNode\n): EntityNode => ({\n  ...baseEntity,\n  quantity: transform(entity.quantity, percentage.value),\n  units: entity.units,\n});\n\nconst addMath = transform((entityValue, percentageValue) => (\n  entityValue * ((100 + percentageValue) / 100)\n));\n\nconst subtractMath = transform((entityValue, percentageValue) => (\n  entityValue * ((100 - percentageValue) / 100)\n));\n\nconst multiplyMath = transform((entityValue, percentageValue) => (\n  entityValue * (percentageValue / 100)\n));\n\nconst divideMath = transform((entityValue, percentageValue) => (\n  entityValue / (percentageValue / 100)\n));\n\nexport {\n  addMath as add,\n  subtractMath as subtract,\n  multiplyMath as multiply,\n  divideMath as divide,\n};\n\nexport default [\n  [FUNCTION_ADD, [NODE_ENTITY, NODE_PERCENTAGE], addMath],\n  [FUNCTION_SUBTRACT, [NODE_ENTITY, NODE_PERCENTAGE], subtractMath],\n  [FUNCTION_MULTIPLY, [NODE_ENTITY, NODE_PERCENTAGE], multiplyMath],\n  [FUNCTION_DIVIDE, [NODE_ENTITY, NODE_PERCENTAGE], divideMath],\n  [FUNCTION_MULTIPLY, [NODE_PERCENTAGE, NODE_ENTITY], flip2(multiplyMath)],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/functions/entityPercentage.js\n **/","// @flow\nimport {\n  first, drop, reduce, isEmpty, isEqual, intersectionWith, keys, size, mapValues, curry, map,\n  flatMap, get, every, flow,\n} from 'lodash/fp';\nimport { NODE_ENTITY, NODE_DATE_TIME, NODE_PERCENTAGE } from '.';\nimport type { ResolverContext, Node, EntityNode, DateTimeNode } from '.'; // eslint-disable-line\nimport { getFundamentalUnits, groupUnitsByFundamentalDimensions } from './entity';\nimport * as entityOps from '../functions/entity';\nimport * as dateTimeOps from '../functions/dateTime';\nimport * as dateTimeEntityOps from '../functions/dateTimeEntity';\nimport * as entityPercentageOps from '../functions/entityPercentage';\nimport { propagateNull } from '../../../util';\n\nconst getUnitPowerForGroupedUnits = curry((units, unitGroup) => reduce((power, unitName) => (\n  power + units[unitName]\n), 0, unitGroup));\n\nconst pathsForGroupedUnits = unitGroup => flow(\n  keys,\n  flatMap(unitName => map(unitPower => [unitName, unitPower], keys(unitGroup[unitName])))\n)(unitGroup);\n\nconst shouldDivide = (context, leftUnits, rightUnits) => {\n  /*\n  The logic for this is that you look for units that have the same dimensions on both the left and\n  right, and assume they want to divide. If they had { meter: 1 } and { yard: 1 }, they likely want\n  to divide. We only look for units that overlap, so { meter: 1 } and { yard: 1, GBP: -1 } will\n  still be a division.\n\n  If they have { liter: 1 } and { gallon: 1 }, they would want to divide. However, if they had\n  { liter: 1 } and { gallon: 1, mile: -1 }, they still want to divide, but if we did this based on\n  fundamental units only, they would not overlap.\n\n  To fix this, we get the fundamental unit powers for each unit. We map this to an object, so the\n  above would look like { meter: { 3: ['liter'] } } and { meter: { 3: ['gallon'] } }. We then look\n  at the powers for 'liter' and 'gallon' on each side, and if they are equal, we assume a division.\n\n  This is not perfect, because you'd want to divide { meter: 3 } and { gallon: 1 }. This should\n  probably be fixed at some point.\n  */\n  const resolveFundamentalPowers = units => flow(\n    groupUnitsByFundamentalDimensions(context),\n    mapValues(mapValues(getUnitPowerForGroupedUnits(units))),\n  )(units);\n\n  const leftGroupedUnits = resolveFundamentalPowers(leftUnits);\n  const rightGroupedUnits = resolveFundamentalPowers(rightUnits);\n\n  const leftPaths = pathsForGroupedUnits(leftGroupedUnits);\n  const rightPaths = pathsForGroupedUnits(rightGroupedUnits);\n\n  const overlappingPaths = intersectionWith(isEqual, leftPaths, rightPaths);\n\n  return (overlappingPaths.length > 0) && every(path => (\n    get(path, leftGroupedUnits) === get(path, rightGroupedUnits)\n  ), overlappingPaths);\n};\n\nconst combineEntities = (\n  context: ResolverContext,\n  left: EntityNode,\n  right: EntityNode\n): ?EntityNode => {\n  const leftFundamentalUnits = getFundamentalUnits(context, left.units);\n  const rightFundamentalUnits = getFundamentalUnits(context, right.units);\n\n  if (isEmpty(leftFundamentalUnits) || isEmpty(rightFundamentalUnits)) {\n    return entityOps.multiply(context, left, right);\n  } else if (isEqual(leftFundamentalUnits, rightFundamentalUnits)) {\n    return entityOps.add(context, left, right);\n  } else if (shouldDivide(context, left.units, right.units)) {\n    return size(left.units) < size(right.units)\n      ? entityOps.divide(context, left, right)\n      : entityOps.divide(context, right, left);\n  }\n  return entityOps.multiply(context, left, right);\n};\n\nconst combineDateTimeEntity = (\n  context: ResolverContext,\n  left: DateTimeNode,\n  right: EntityNode\n) => (\n  left.directionHint === -1\n    ? dateTimeEntityOps.subtract(context, left, right)\n    : dateTimeEntityOps.add(context, left, right)\n);\n\nconst combineValues = (context: ResolverContext) => (\n  left: Node,\n  right: Node\n): ?Node => {\n  if (left.type === NODE_ENTITY && right.type === NODE_ENTITY) {\n    return combineEntities(context, left, right);\n  } else if (left.type === NODE_DATE_TIME && right.type === NODE_DATE_TIME) {\n    return dateTimeOps.add(context, left, right);\n  } else if (left.type === NODE_DATE_TIME && right.type === NODE_ENTITY) {\n    return combineDateTimeEntity(context, left, right);\n  } else if (left.type === NODE_ENTITY && right.type === NODE_DATE_TIME) {\n    return combineDateTimeEntity(context, right, left);\n  } else if (left.type === NODE_ENTITY && right.type === NODE_PERCENTAGE) {\n    return entityPercentageOps.multiply(context, left, right);\n  } else if (left.type === NODE_PERCENTAGE && right.type === NODE_ENTITY) {\n    return entityPercentageOps.multiply(context, right, left);\n  }\n  return null;\n};\n\nexport const resolve = ( // eslint-disable-line\n  context: ResolverContext,\n  values: Node[]\n): ?Node => reduce(\n  propagateNull(combineValues(context)),\n  first(values),\n  drop(1, values)\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/types/miscGroup.js\n **/","// @flow\nimport { every, reduce, isEmpty, set, endsWith } from 'lodash/fp';\nimport { NODE_ENTITY, NODE_COLOR } from '.';\nimport type { ResolverContext, Units, Node, ConversionNode } from '.'; // eslint-disable-line\nimport { combineUnits, unitsAreCompatable, convertTo, convertComposite } from '../types/entity';\nimport { convertSpace } from '../types/color';\n\nexport const convert = ( // eslint-disable-line\n  context: ResolverContext,\n  conversion: ConversionNode,\n  value: Node\n): ?Node => {\n  if (value.type === NODE_ENTITY && !isEmpty(value.pseudoConversion)) return null;\n  if (value.type !== NODE_ENTITY && !isEmpty(value.entityConversion)) return null;\n\n  switch (value.type) {\n    case NODE_ENTITY: {\n      const units = conversion.entityConversion;\n      let entity = value;\n\n      if (!isEmpty(units)) {\n        const [firstUnit, ...remainingUnits] = units;\n        const allUnitsCompatable =\n          !isEmpty(remainingUnits) && every(unitsAreCompatable(context, firstUnit), remainingUnits);\n\n        entity = allUnitsCompatable\n          ? convertComposite(context, units, entity)\n          : convertTo(context, reduce(combineUnits, firstUnit, remainingUnits), entity);\n      }\n\n      if (!entity) return null;\n      entity = set('formatting', conversion.formatting, entity);\n\n      return entity;\n    }\n    case NODE_COLOR: {\n      const conversionSpace = conversion.pseudoConversion;\n      let color = value;\n      let { formatting } = conversion;\n\n      if (conversionSpace) {\n        const hasAlphaComponent = endsWith('a', conversionSpace);\n        const targetColorSpace = hasAlphaComponent\n          ? conversionSpace.slice(0, -1)\n          : conversionSpace;\n\n        color = convertSpace(context, targetColorSpace, color);\n        formatting = { ...formatting, asFunction: true, withAlpha: hasAlphaComponent };\n      }\n\n      color = set('formatting', formatting, color);\n\n      return color;\n    }\n    default:\n      return null;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/types/conversion.js\n **/","// @flow\nimport type { ResolverContext, ColorNode } from '.'; // eslint-disable-line\nimport { evolveColor } from '../util/color';\n\nexport const convertSpace = ( // eslint-disable-line\n  context: ResolverContext,\n  targetColorSpace: string,\n  color: ColorNode\n): ?ColorNode => (\n  evolveColor(color, color => color.convert(targetColorSpace))\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/types/color.js\n **/","// @flow\nimport { assignWith } from 'lodash/fp';\nimport { baseDateTime } from '.';\nimport type { ResolverContext, DateTimeNode } from '.'; // eslint-disable-line\n\n/* eslint-disable import/prefer-default-export */\nexport const resolveDefaults = (context: ResolverContext, dateTime: DateTimeNode) => ({\n  ...baseDateTime,\n  value: assignWith((a, b) => (a !== null ? a : b), dateTime.value, context.date),\n  directionHint: dateTime.directionHint,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/types/dateTime.js\n **/","// @flow\nimport { assign, update, __, set } from 'lodash/fp';\nimport type { ConversionDescriptors, DateTime, ResolverContext } from './types';\n\nconst defaultContext: ResolverContext = {\n  conversionDescriptors: {},\n  date: {\n    second: 0,\n    minute: 0,\n    hour: 0,\n    date: 1,\n    month: 1, // See note in ./types\n    year: 1970,\n    timezone: 'UTC',\n  },\n  setUnits(conversionDescriptors: ConversionDescriptors): ResolverContext {\n    return set('conversionDescriptors', conversionDescriptors, this);\n  },\n  setDate(date: DateTime): ResolverContext {\n    return update('date', assign(__, date), this);\n  },\n};\nexport default defaultContext;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math/resolverContext.js\n **/","// @flow\nimport { set, reduce } from 'lodash/fp';\nimport en from './en';\nimport defaultLocale from './defaultLocale';\nimport type { Formatter } from './types';\n\nconst localeFormatters = {\n  en,\n};\n\n// Technically allows for composition of locales, so you could do en_GB, base_en, defaultLocale\nconst formatter: Formatter = {\n  locales: [defaultLocale],\n  setLocale(locale) {\n    return locale in localeFormatters\n      ? set('locales', [localeFormatters[locale], defaultLocale], this)\n      : set('locales', [defaultLocale], this);\n  },\n  format(context, node) {\n    if (!node) return '';\n    const { type } = node;\n    const contextWithFormat = set('formatter', this, context);\n\n    return reduce((output, localeFormatter) => {\n      if (output) {\n        return output;\n      } else if (type in localeFormatter) {\n        return localeFormatter[type](contextWithFormat, node);\n      }\n      return '';\n    }, '', this.locales);\n  },\n};\nexport default formatter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math-formatter/index.js\n **/","// @flow\nimport tz from 'timezone/loaded';\nimport { NODE_ENTITY, NODE_DATE_TIME } from '../../math/types';\nimport type { Locale } from '../types';\nimport formatEntity from './entity';\n\n\nconst enFormatter: Locale = {\n  [NODE_ENTITY]: formatEntity,\n  [NODE_DATE_TIME]: (context, dateTime) => {\n    const { year, month, date, hour, minute, second, timezone } = dateTime.value;\n    return tz([year, month, date, hour, minute, second], 'en_GB', '%c', timezone);\n  },\n};\nexport default enFormatter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math-formatter/en/index.js\n **/","// @flow\nimport { isEqual, toPairs, reduce, stubTrue, cond, getOr } from 'lodash/fp';\nimport type { EntityNode, ResolverContext } from '../../math/types';\nimport { convertToFundamentalUnits } from '../../math/types/entity';\nimport unitFormatting from '../data/en-unit-formatting.json';\nimport unitPlurals from '../data/en-unit-plurals.json';\nimport { formatPower, orderOfMagnitude } from '../util';\n\n\n/* eslint-disable quote-props */\nconst baseNames = {\n  '2': '0b',\n  '8': '0o',\n  '10': '',\n  '16': '0x',\n};\n/* eslint-enable */\n\nconst formatUnits = (value, entity) => {\n  const isPlural = entity.quantity !== 1;\n  const formatPlural = isPlural\n    ? unit => getOr(unit, unit, unitPlurals)\n    : unit => unit;\n\n  return reduce((value, [unit, power]) => {\n    if (unit.power > 1) {\n      return `${value} ${formatPlural(unit)}^${formatPower(power)}`;\n    } else if (unit.power < -1) {\n      return `${value} per ${unit}^${formatPower(power)}`;\n    } else if (unit.power === -1) {\n      return `${value} per ${unit}`;\n    }\n    // power is 1\n    if (unit in unitFormatting) {\n      const [title, position] = unitFormatting[unit];\n      return position === 'suffix'\n        ? `${value}${title}`\n        : `${title}${value}`;\n    }\n    return `${value} ${formatPlural(unit)}`;\n  }, value, toPairs(entity.units));\n};\n\nconst isCurrency = (context, entity) =>\n  !entity.formatting.base &&\n  !entity.formatting.decimalPlaces &&\n  !entity.formatting.significantFigures &&\n  isEqual(convertToFundamentalUnits(context, entity), { EUR: 1 });\n\nconst formatCurrency = (context, entity) =>\n  formatUnits(entity.quantity.toFixed(2), entity);\n\nconst baseNumberFormatter = (entity) => {\n  const { base, decimalPlaces, significantFigures } = entity.formatting;\n\n  // if (entity.quantity === 1 && !noSymbols(entity)) {\n  //   return '';\n  // } else\n  if (base !== undefined) {\n    const prefix = getOr(`(base ${base}) `, base, baseNames);\n    return `${prefix}${entity.quantity.toString(base)}`;\n  } else if (decimalPlaces !== undefined) {\n    return entity.quantity.toFixed(decimalPlaces);\n  }\n\n  const absValue = Math.abs(entity.quantity);\n\n  if (significantFigures !== undefined) {\n    return (absValue !== 0)\n      ? entity.quantity.toFixed(significantFigures - orderOfMagnitude(absValue))\n      : '0';\n  } else if (absValue > 1E2 || absValue === 0) {\n    return entity.quantity.toFixed(0);\n  } else if (absValue > 1E-6) {\n    // Note bigger than zero, so no log 0\n    const magnitude = orderOfMagnitude(absValue);\n\n    if (absValue - Math.floor(absValue) < (10 ** magnitude) * 1E-3) {\n      // Last three numbers zero. i.e. 1,234,000\n      // Don't show decimal place\n      return entity.quantity.toFixed(0);\n    }\n    // Show two significant figures\n    return entity.quantity.toFixed(2 - magnitude);\n  }\n  return entity.quantity.toExponential(3);\n};\n\nconst baseFormatter = (context, entity) =>\n  formatUnits(baseNumberFormatter(entity), entity);\n\nconst entityFormatter: (\n  context: ResolverContext,\n  entity: EntityNode,\n) => string = cond([\n  [isCurrency, formatCurrency],\n  [stubTrue, baseFormatter],\n]);\nexport default entityFormatter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math-formatter/en/entity.js\n **/","module.exports = {\n\t\"angstrom\": [\n\t\t\" Å\",\n\t\t\"suffix\"\n\t],\n\t\"Celsius\": [\n\t\t\"℃\",\n\t\t\"suffix\"\n\t],\n\t\"Fahrenheit\": [\n\t\t\"℉\",\n\t\t\"suffix\"\n\t],\n\t\"Kelvin\": [\n\t\t\" Kelvin\",\n\t\t\"suffix\"\n\t],\n\t\"gas mark\": [\n\t\t\"Gas mark \",\n\t\t\"prefix\"\n\t],\n\t\"EUR\": [\n\t\t\"€\",\n\t\t\"prefix\"\n\t],\n\t\"GBP\": [\n\t\t\"£\",\n\t\t\"prefix\"\n\t],\n\t\"USD\": [\n\t\t\"$\",\n\t\t\"prefix\"\n\t],\n\t\"kilobyte\": [\n\t\t\"KB\",\n\t\t\"suffix\"\n\t],\n\t\"megabyte\": [\n\t\t\"MB\",\n\t\t\"suffix\"\n\t],\n\t\"gigabyte\": [\n\t\t\"GB\",\n\t\t\"suffix\"\n\t],\n\t\"terabyte\": [\n\t\t\"TB\",\n\t\t\"suffix\"\n\t],\n\t\"petabyte\": [\n\t\t\"PB\",\n\t\t\"suffix\"\n\t],\n\t\"kibibyte\": [\n\t\t\"KiB\",\n\t\t\"suffix\"\n\t],\n\t\"mebibyte\": [\n\t\t\"MiB\",\n\t\t\"suffix\"\n\t],\n\t\"gibibyte\": [\n\t\t\"GiB\",\n\t\t\"suffix\"\n\t],\n\t\"tebibyte\": [\n\t\t\"TiB\",\n\t\t\"suffix\"\n\t],\n\t\"pebibyte\": [\n\t\t\"PiB\",\n\t\t\"suffix\"\n\t],\n\t\"degree\": [\n\t\t\"°\",\n\t\t\"suffix\"\n\t],\n\t\"percent\": [\n\t\t\"%\",\n\t\t\"suffix\"\n\t],\n\t\"arcsecond\": [\n\t\t\"″\",\n\t\t\"suffix\"\n\t],\n\t\"arcminute\": [\n\t\t\"′\",\n\t\t\"suffix\"\n\t]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/modules/math-formatter/data/en-unit-formatting.json\n ** module id = 62\n ** module chunks = 0\n **/","module.exports = {\n\t\"second\": \"seconds\",\n\t\"minute\": \"minutes\",\n\t\"hour\": \"hours\",\n\t\"day\": \"days\",\n\t\"weekday\": \"weekdays\",\n\t\"week\": \"weeks\",\n\t\"fortnight\": \"fortnights\",\n\t\"month\": \"months\",\n\t\"year\": \"years\",\n\t\"decade\": \"decades\",\n\t\"century\": \"centuries\",\n\t\"meter\": \"meters\",\n\t\"inch\": \"inches\",\n\t\"foot\": \"feet\",\n\t\"yard\": \"yards\",\n\t\"mile\": \"miles\",\n\t\"league\": \"leagues\",\n\t\"fathom\": \"fathoms\",\n\t\"furlong\": \"furlongs\",\n\t\"light year\": \"light years\",\n\t\"parsec\": \"parsecs\",\n\t\"nautical mile\": \"nautical miles\",\n\t\"gram\": \"grams\",\n\t\"tonne\": \"tonnes\",\n\t\"ounce\": \"ounces\",\n\t\"pound\": \"pounds\",\n\t\"stone\": \"stones\",\n\t\"acre\": \"acres\",\n\t\"hectare\": \"hectares\",\n\t\"liter\": \"liters\",\n\t\"gallon\": \"gallons\",\n\t\"us gallon\": \"us gallons\",\n\t\"quart\": \"quarts\",\n\t\"cup\": \"cups\",\n\t\"US cup\": \"US cups\",\n\t\"teaspoon\": \"teaspoons\",\n\t\"tablespoon\": \"tablespoons\",\n\t\"drop\": \"drops\",\n\t\"fluid ounce\": \"fluid ounces\",\n\t\"Joule\": \"Joules\",\n\t\"Calorie\": \"Calories\",\n\t\"electron volt\": \"electron volts\",\n\t\"BTU\": \"BTUS\",\n\t\"therm\": \"therms\",\n\t\"degrees Kelvin\": \"degrees Kelvins\",\n\t\"degrees Celsius\": \"degrees Celsiuses\",\n\t\"degrees Fahrenheit\": \"degrees Fahrenheits\",\n\t\"degrees Rankine\": \"degrees Rankines\",\n\t\"Watt\": \"Watts\",\n\t\"bit\": \"bits\",\n\t\"byte\": \"bytes\",\n\t\"AUD\": \"AUDS\",\n\t\"BGN\": \"BGNS\",\n\t\"BRL\": \"BRLS\",\n\t\"CAD\": \"CADS\",\n\t\"CHF\": \"CHFS\",\n\t\"CNY\": \"CNIES\",\n\t\"CZK\": \"CZKS\",\n\t\"DKK\": \"DKKS\",\n\t\"HKD\": \"HKDS\",\n\t\"HRK\": \"HRKS\",\n\t\"HUF\": \"HUFS\",\n\t\"IDR\": \"IDRS\",\n\t\"ILS\": \"ILS\",\n\t\"INR\": \"INRS\",\n\t\"JPY\": \"JPIES\",\n\t\"KRW\": \"KRWS\",\n\t\"MXN\": \"MXNS\",\n\t\"MYR\": \"MYRS\",\n\t\"NOK\": \"NOKS\",\n\t\"NZD\": \"NZDS\",\n\t\"PHP\": \"PHPS\",\n\t\"PLN\": \"PLNS\",\n\t\"RON\": \"RONS\",\n\t\"RUB\": \"RUBS\",\n\t\"SEK\": \"SEKS\",\n\t\"SGD\": \"SGDS\",\n\t\"THB\": \"THBS\",\n\t\"TRY\": \"TRIES\",\n\t\"ZAR\": \"ZARS\",\n\t\"femtosecond\": \"femtoseconds\",\n\t\"picosecond\": \"picoseconds\",\n\t\"nanosecond\": \"nanoseconds\",\n\t\"microsecond\": \"microseconds\",\n\t\"millisecond\": \"milliseconds\",\n\t\"femtometer\": \"femtometers\",\n\t\"picometer\": \"picometers\",\n\t\"nanometer\": \"nanometers\",\n\t\"micrometer\": \"micrometers\",\n\t\"millimeter\": \"millimeters\",\n\t\"centimeter\": \"centimeters\",\n\t\"kilometer\": \"kilometers\",\n\t\"megameter\": \"megameters\",\n\t\"gigameter\": \"gigameters\",\n\t\"terameter\": \"terameters\",\n\t\"petameter\": \"petameters\",\n\t\"femtogram\": \"femtograms\",\n\t\"picogram\": \"picograms\",\n\t\"nanogram\": \"nanograms\",\n\t\"microgram\": \"micrograms\",\n\t\"milligram\": \"milligrams\",\n\t\"kilogram\": \"kilograms\",\n\t\"megagram\": \"megagrams\",\n\t\"gigagram\": \"gigagrams\",\n\t\"teragram\": \"teragrams\",\n\t\"petagram\": \"petagrams\",\n\t\"milliliter\": \"milliliters\",\n\t\"centiliter\": \"centiliters\",\n\t\"femtojoule\": \"femtojoules\",\n\t\"picojoule\": \"picojoules\",\n\t\"nanojoule\": \"nanojoules\",\n\t\"microjoule\": \"microjoules\",\n\t\"millijoule\": \"millijoules\",\n\t\"centijoule\": \"centijoules\",\n\t\"kilojoule\": \"kilojoules\",\n\t\"megajoule\": \"megajoules\",\n\t\"gigajoule\": \"gigajoules\",\n\t\"terajoule\": \"terajoules\",\n\t\"petajoule\": \"petajoules\",\n\t\"femtowatt\": \"femtowatts\",\n\t\"picowatt\": \"picowatts\",\n\t\"nanowatt\": \"nanowatts\",\n\t\"microwatt\": \"microwatts\",\n\t\"milliwatt\": \"milliwatts\",\n\t\"kilowatt\": \"kilowatts\",\n\t\"megawatt\": \"megawatts\",\n\t\"gigawatt\": \"gigawatts\",\n\t\"terawatt\": \"terawatts\",\n\t\"petawatt\": \"petawatts\",\n\t\"kilobit\": \"kilobits\",\n\t\"megabit\": \"megabits\",\n\t\"gigabit\": \"gigabits\",\n\t\"terabit\": \"terabits\",\n\t\"petabit\": \"petabits\",\n\t\"kibibit\": \"kibibits\",\n\t\"mebibit\": \"mebibits\",\n\t\"gibibit\": \"gibibits\",\n\t\"tebibit\": \"tebibits\",\n\t\"pebibit\": \"pebibits\",\n\t\"radian\": \"radians\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/modules/math-formatter/data/en-unit-plurals.json\n ** module id = 63\n ** module chunks = 0\n **/","// @flow\nimport { flow, split, map, propertyOf, join } from 'lodash/fp';\n\n/* eslint-disable quote-props */\nconst powers = {\n  '0': '⁰',\n  '1': '¹',\n  '2': '²',\n  '3': '³',\n  '4': '⁴',\n  '5': '⁵',\n  '6': '⁶',\n  '7': '⁷',\n  '8': '⁸',\n  '9': '⁹',\n  '.': ' ',\n  '-': '⁻',\n};\n/* eslint-enable */\n\nexport const formatPower: (value: number | string) => string = flow(\n  String,\n  split(''),\n  map(propertyOf(powers)),\n  join(''),\n);\n\nexport const orderOfMagnitude = (value: number): number => Math.floor(Math.log10(value));\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math-formatter/util.js\n **/","// @flow\nimport { flow, toPairs, map, join } from 'lodash/fp';\nimport Color from 'color-forge';\nimport { dateTimeToUTCUnix } from '../math/util/date';\nimport {\n  NODE_ASSIGNMENT, NODE_ENTITY, NODE_COMPOSITE_ENTITY, NODE_DATE_TIME, NODE_COLOR,\n} from '../math/types';\nimport type { Locale } from './types';\n\nconst hsxFormatter = ([hue, a, b]) => [hue, `${a}%`, `${b}%`];\nconst colorFormatters = {\n  hsl: hsxFormatter,\n  hsv: hsxFormatter,\n};\n\nconst defaultFormatter: Locale = {\n  [NODE_ASSIGNMENT]: (context, assignment) => (\n    `${assignment.identifier} = ${context.formatter.format(context, assignment.value)}`\n  ),\n  [NODE_ENTITY]: (context, entity) => {\n    const unitsString = flow(\n      toPairs,\n      map(([unit, power]) => (power === 1 ? unit : `${unit}^${power}`)),\n      join(' ')\n    )(entity.units);\n    return `${entity.quantity} ${unitsString}`;\n  },\n  [NODE_COMPOSITE_ENTITY]: (context, compositeEntity) => {\n    const formattedEntities = map(entity => (\n      context.formatter.format(entity)\n    ), compositeEntity.value);\n    return formattedEntities.join(' ');\n  },\n  [NODE_COLOR]: (context, color) => {\n    const { asFunction, withAlpha } = color.formatting;\n    if (!asFunction) return new Color(color.values, color.alpha, color.space).toHex();\n\n    const { space, values, alpha } = color;\n\n    const functionName = `${space}${withAlpha ? 'a' : ''}`;\n    let args = map(Math.round, values);\n\n    if (space in colorFormatters) args = colorFormatters[space](args);\n    if (withAlpha) args = args.concat(Math.round(alpha) === alpha ? alpha : alpha.toFixed(2));\n\n    return `${functionName}(${args.join(', ')})`;\n  },\n  [NODE_DATE_TIME]: (context, dateTime) => (\n    new Date(dateTimeToUTCUnix(dateTime)).toISOString()\n  ),\n};\nexport default defaultFormatter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/math-formatter/defaultLocale.js\n **/","// @flow\nimport { findIndex, last } from 'lodash/fp';\nimport type { ConversionDescriptors } from './modules/math/types';\n\nconst timeDimensions = { time: 1 };\nconst lengthDimensions = { length: 1 };\nconst massDimensions = { mass: 1 };\nconst areaDimensions = { length: 2 };\nconst volumeDimensions = { length: 3 };\nconst energyDimensions = { mass: 1, length: 2, time: -2 };\nconst powerDimensions = { mass: 1, length: 2, time: -3 };\nconst memoryDimensions = { memory: 1 };\nconst currencyDimensions = { currency: 1 };\nconst absoluteTemperatureDimensions = { absoluteTemperature: 1 };\nconst noDimensions = {};\n\nconst gasMarkToK =\n  [380.35, 394.25, 408.15, 421.95, 435.85, 453.15, 463.65, 477.55, 491.45, 505.35, 519.25];\nconst kToGasMark =\n  [0.25, 0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// TODO: Copy from https://github.com/gentooboontoo/js-quantities/blob/master/src/quantities.js\n\n/* eslint-disable quote-props, no-multi-spaces, indent, max-len */\nconst conversionDescriptors: ConversionDescriptors = {\n               'second': [1,                             timeDimensions],\n               'minute': [60,                            timeDimensions],\n                 'hour': [3600,                          timeDimensions],\n                  'day': [86400,                         timeDimensions],\n              'weekday': [120960,                        timeDimensions],\n                 'week': [604800,                        timeDimensions],\n            'fortnight': [1209600,                       timeDimensions],\n                'month': [2628000,                       timeDimensions],\n                 'year': [31536000,                      timeDimensions],\n               'decade': [315360000,                     timeDimensions],\n              'century': [3155673600,                    timeDimensions],\n\n                'meter': [1,                             lengthDimensions],\n                 'inch': [0.0254,                        lengthDimensions],\n                 'foot': [0.3048,                        lengthDimensions],\n                 'yard': [0.9144,                        lengthDimensions],\n                 'mile': [1609,                          lengthDimensions],\n               'league': [4827,                          lengthDimensions],\n               'fathom': [1.8288,                        lengthDimensions],\n              'furlong': [201,                           lengthDimensions],\n           'light year': [9.4605284e15,                  lengthDimensions],\n               'parsec': [3.086e16,                      lengthDimensions],\n             'angstrom': [1e-10,                         lengthDimensions],\n        'nautical mile': [1852,                          lengthDimensions],\n\n                 'gram': [1e-3,                          massDimensions],\n                'tonne': [1e3,                           massDimensions],\n                'ounce': [0.0283495,                     massDimensions],\n                'pound': [0.453592,                      massDimensions],\n                'stone': [6.35029,                       massDimensions],\n\n                 'acre': [4047,                          areaDimensions],\n              'hectare': [1e4,                           areaDimensions],\n\n                'liter': [1e-3,                          volumeDimensions],\n               'gallon': [4.54609e-3,                    volumeDimensions],\n            'us gallon': [3.785e-3,                      volumeDimensions],\n                'quart': [9.464e-4,                      volumeDimensions],\n                  'cup': [2.4e-4,                        volumeDimensions],\n               'US cup': [2.3559e-4,                     volumeDimensions],\n             'teaspoon': [4.929e-6,                      volumeDimensions],\n           'tablespoon': [1.479e-5,                      volumeDimensions],\n                 'drop': [5e-8,                          volumeDimensions],\n          'fluid ounce': [2.8413e-5,                     volumeDimensions],\n\n                'Joule': [1,                             energyDimensions],\n              'Calorie': [4.184,                         energyDimensions],\n        'electron volt': [1.602e-19,                     energyDimensions],\n                  'BTU': [1055,                          energyDimensions],\n                'therm': [1055000000,                    energyDimensions],\n\n                         // We also have absolute temperatures below\n       'degrees Kelvin': [1.4e-23,                       energyDimensions],\n      'degrees Celsius': [1.4e-23,                       energyDimensions],\n   'degrees Fahrenheit': [7.7777777778e-23,              energyDimensions],\n      'degrees Rankine': [7.7777777778e-23,              energyDimensions],\n\n                 'Watt': [1,                             powerDimensions],\n\n                  'bit': [1,                             memoryDimensions],\n                 'byte': [8,                             memoryDimensions],\n\n                  'AUD': [1,                             currencyDimensions],\n                  'BGN': [1,                             currencyDimensions],\n                  'BRL': [1,                             currencyDimensions],\n                  'CAD': [1,                             currencyDimensions],\n                  'CHF': [1,                             currencyDimensions],\n                  'CNY': [1,                             currencyDimensions],\n                  'CZK': [1,                             currencyDimensions],\n                  'DKK': [1,                             currencyDimensions],\n                  'EUR': [1,                             currencyDimensions],\n                  'GBP': [1,                             currencyDimensions],\n                  'HKD': [1,                             currencyDimensions],\n                  'HRK': [1,                             currencyDimensions],\n                  'HUF': [1,                             currencyDimensions],\n                  'IDR': [1,                             currencyDimensions],\n                  'ILS': [1,                             currencyDimensions],\n                  'INR': [1,                             currencyDimensions],\n                  'JPY': [1,                             currencyDimensions],\n                  'KRW': [1,                             currencyDimensions],\n                  'MXN': [1,                             currencyDimensions],\n                  'MYR': [1,                             currencyDimensions],\n                  'NOK': [1,                             currencyDimensions],\n                  'NZD': [1,                             currencyDimensions],\n                  'PHP': [1,                             currencyDimensions],\n                  'PLN': [1,                             currencyDimensions],\n                  'RON': [1,                             currencyDimensions],\n                  'RUB': [1,                             currencyDimensions],\n                  'SEK': [1,                             currencyDimensions],\n                  'SGD': [1,                             currencyDimensions],\n                  'THB': [1,                             currencyDimensions],\n                  'TRY': [1,                             currencyDimensions],\n                  'USD': [1,                             currencyDimensions],\n                  'ZAR': [1,                             currencyDimensions],\n\n          'femtosecond': [1e-15,                         timeDimensions],\n           'picosecond': [1e-12,                         timeDimensions],\n           'nanosecond': [1e-9,                          timeDimensions],\n          'microsecond': [1e-6,                          timeDimensions],\n          'millisecond': [1e-3,                          timeDimensions],\n\n           'femtometer': [1e-15,                         lengthDimensions],\n            'picometer': [1e-12,                         lengthDimensions],\n            'nanometer': [1e-9,                          lengthDimensions],\n           'micrometer': [1e-6,                          lengthDimensions],\n           'millimeter': [1e-3,                          lengthDimensions],\n           'centimeter': [1e-2,                          lengthDimensions],\n            'kilometer': [1e3,                           lengthDimensions],\n            'megameter': [1e6,                           lengthDimensions],\n            'gigameter': [1e9,                           lengthDimensions],\n            'terameter': [1e12,                          lengthDimensions],\n            'petameter': [1e15,                          lengthDimensions],\n\n            'femtogram': [1e-18,                         massDimensions],\n             'picogram': [1e-15,                         massDimensions],\n             'nanogram': [1e-12,                         massDimensions],\n            'microgram': [1e-9,                          massDimensions],\n            'milligram': [1e-6,                          massDimensions],\n             'kilogram': [1,                             massDimensions],\n             'megagram': [1e3,                           massDimensions],\n             'gigagram': [1e6,                           massDimensions],\n             'teragram': [1e9,                           massDimensions],\n             'petagram': [1e12,                          massDimensions],\n\n           'milliliter': [1e-6,                          volumeDimensions],\n           'centiliter': [1e-5,                          volumeDimensions],\n\n           'femtojoule': [1e-15,                         energyDimensions],\n            'picojoule': [1e-12,                         energyDimensions],\n            'nanojoule': [1e-9,                          energyDimensions],\n           'microjoule': [1e-6,                          energyDimensions],\n           'millijoule': [1e-3,                          energyDimensions],\n           'centijoule': [1e-2,                          energyDimensions],\n            'kilojoule': [1e3,                           energyDimensions],\n            'megajoule': [1e6,                           energyDimensions],\n            'gigajoule': [1e9,                           energyDimensions],\n            'terajoule': [1e12,                          energyDimensions],\n            'petajoule': [1e15,                          energyDimensions],\n\n            'femtowatt': [1e-15,                         powerDimensions],\n             'picowatt': [1e-12,                         powerDimensions],\n             'nanowatt': [1e-9,                          powerDimensions],\n            'microwatt': [1e-6,                          powerDimensions],\n            'milliwatt': [1,                             powerDimensions],\n             'kilowatt': [1e3,                           powerDimensions],\n             'megawatt': [1e6,                           powerDimensions],\n             'gigawatt': [1e9,                           powerDimensions],\n             'terawatt': [1e12,                          powerDimensions],\n             'petawatt': [1e15,                          powerDimensions],\n\n              'kilobit': [1e3,                           memoryDimensions],\n              'megabit': [1e6,                           memoryDimensions],\n              'gigabit': [1e9,                           memoryDimensions],\n              'terabit': [1e12,                          memoryDimensions],\n              'petabit': [1e15,                          memoryDimensions],\n              'kibibit': [1024,                          memoryDimensions],\n              'mebibit': [1048576,                       memoryDimensions],\n              'gibibit': [1073741824,                    memoryDimensions],\n              'tebibit': [1099511627776,                 memoryDimensions],\n              'pebibit': [1125899906842624,              memoryDimensions],\n\n             'kilobyte': [8e3,                           memoryDimensions],\n             'megabyte': [8e6,                           memoryDimensions],\n             'gigabyte': [8e9,                           memoryDimensions],\n             'terabyte': [8e12,                          memoryDimensions],\n             'petabyte': [8e15,                          memoryDimensions],\n             'kibibyte': [8192,                          memoryDimensions],\n             'mebibyte': [8388608,                       memoryDimensions],\n             'gibibyte': [8589934592,                    memoryDimensions],\n             'tebibyte': [8796093022208,                 memoryDimensions],\n             'pebibyte': [9007199254740992,              memoryDimensions],\n\n              // 'percent': [0.01,                          noDimensions],\n               'degree': [0.0174532925199432957692369,   noDimensions],\n               'radian': [1,                             noDimensions],\n            'arcminute': [0.000290888208665721596153948, noDimensions],\n            'arcsecond': [4.848136811095359935899141e-6, noDimensions],\n\n                         // TODO: Rankine\n               'Kelvin': [1,                             absoluteTemperatureDimensions],\n              'Celsius': [{\n                           convertToBase: value => value - 273.15,\n                           convertFromBase: value => value + 273.15,\n                         }, absoluteTemperatureDimensions],\n             'gas mark': [{\n                           convertToBase: value => kToGasMark[findIndex(k => k >= value, gasMarkToK)] || last(kToGasMark),\n                           convertFromBase: value => gasMarkToK[findIndex(gasMark => gasMark >= value, kToGasMark)] || last(gasMarkToK),\n                         }, absoluteTemperatureDimensions],\n           'Fahrenheit': [{\n                           convertToBase: value => ((value - 273.15) * 1.8) + 32,\n                           convertFromBase: value => ((value - 32) / 1.8) + 273.15,\n                         }, absoluteTemperatureDimensions],\n};\n/* eslint-enable */\n\nexport default conversionDescriptors;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/units.js\n **/"],"sourceRoot":""}